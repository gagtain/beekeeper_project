{
  "version": 3,
  "sources": ["../../../../ufo/dist/index.mjs", "../../../../radix3/dist/index.mjs", "../../../../destr/dist/index.mjs", "../../../../cookie-es/dist/index.mjs", "../../../../uncrypto/dist/crypto.web.mjs", "../../../../iron-webcrypto/dist/index.js", "../../../../defu/dist/defu.mjs", "../../../../h3/dist/index.mjs"],
  "sourcesContent": ["const n = /[^\\0-\\x7E]/;\nconst t = /[\\x2E\\u3002\\uFF0E\\uFF61]/g;\nconst o = {\n  overflow: \"Overflow Error\",\n  \"not-basic\": \"Illegal Input\",\n  \"invalid-input\": \"Invalid Input\"\n};\nconst e = Math.floor;\nconst r = String.fromCharCode;\nfunction s(n2) {\n  throw new RangeError(o[n2]);\n}\nconst c = function(n2, t2) {\n  return n2 + 22 + 75 * (n2 < 26) - ((t2 != 0) << 5);\n};\nconst u = function(n2, t2, o2) {\n  let r2 = 0;\n  for (n2 = o2 ? e(n2 / 700) : n2 >> 1, n2 += e(n2 / t2); n2 > 455; r2 += 36) {\n    n2 = e(n2 / 35);\n  }\n  return e(r2 + 36 * n2 / (n2 + 38));\n};\nfunction toASCII(o2) {\n  return function(n2, o3) {\n    const e2 = n2.split(\"@\");\n    let r2 = \"\";\n    e2.length > 1 && (r2 = e2[0] + \"@\", n2 = e2[1]);\n    const s2 = function(n3, t2) {\n      const o4 = [];\n      let e3 = n3.length;\n      for (; e3--; ) {\n        o4[e3] = t2(n3[e3]);\n      }\n      return o4;\n    }((n2 = n2.replace(t, \".\")).split(\".\"), o3).join(\".\");\n    return r2 + s2;\n  }(o2, function(t2) {\n    return n.test(t2) ? \"xn--\" + function(n2) {\n      const t3 = [];\n      const o3 = (n2 = function(n3) {\n        const t4 = [];\n        let o4 = 0;\n        const e2 = n3.length;\n        for (; o4 < e2; ) {\n          const r2 = n3.charCodeAt(o4++);\n          if (r2 >= 55296 && r2 <= 56319 && o4 < e2) {\n            const e3 = n3.charCodeAt(o4++);\n            (64512 & e3) == 56320 ? t4.push(((1023 & r2) << 10) + (1023 & e3) + 65536) : (t4.push(r2), o4--);\n          } else {\n            t4.push(r2);\n          }\n        }\n        return t4;\n      }(n2)).length;\n      let f = 128;\n      let i = 0;\n      let l = 72;\n      for (const o4 of n2) {\n        o4 < 128 && t3.push(r(o4));\n      }\n      const h = t3.length;\n      let p = h;\n      for (h && t3.push(\"-\"); p < o3; ) {\n        let o4 = 2147483647;\n        for (const t4 of n2) {\n          t4 >= f && t4 < o4 && (o4 = t4);\n        }\n        const a = p + 1;\n        o4 - f > e((2147483647 - i) / a) && s(\"overflow\"), i += (o4 - f) * a, f = o4;\n        for (const o5 of n2) {\n          if (o5 < f && ++i > 2147483647 && s(\"overflow\"), o5 == f) {\n            let n3 = i;\n            for (let o6 = 36; ; o6 += 36) {\n              const s2 = o6 <= l ? 1 : o6 >= l + 26 ? 26 : o6 - l;\n              if (n3 < s2) {\n                break;\n              }\n              const u2 = n3 - s2;\n              const f2 = 36 - s2;\n              t3.push(r(c(s2 + u2 % f2, 0))), n3 = e(u2 / f2);\n            }\n            t3.push(r(c(n3, 0))), l = u(i, a, p == h), i = 0, ++p;\n          }\n        }\n        ++i, ++f;\n      }\n      return t3.join(\"\");\n    }(t2) : t2;\n  });\n}\n\nconst HASH_RE = /#/g;\nconst AMPERSAND_RE = /&/g;\nconst SLASH_RE = /\\//g;\nconst EQUAL_RE = /=/g;\nconst IM_RE = /\\?/g;\nconst PLUS_RE = /\\+/g;\nconst ENC_CARET_RE = /%5e/gi;\nconst ENC_BACKTICK_RE = /%60/gi;\nconst ENC_CURLY_OPEN_RE = /%7b/gi;\nconst ENC_PIPE_RE = /%7c/gi;\nconst ENC_CURLY_CLOSE_RE = /%7d/gi;\nconst ENC_SPACE_RE = /%20/gi;\nconst ENC_SLASH_RE = /%2f/gi;\nconst ENC_ENC_SLASH_RE = /%252f/gi;\nfunction encode(text) {\n  return encodeURI(\"\" + text).replace(ENC_PIPE_RE, \"|\");\n}\nfunction encodeHash(text) {\n  return encode(text).replace(ENC_CURLY_OPEN_RE, \"{\").replace(ENC_CURLY_CLOSE_RE, \"}\").replace(ENC_CARET_RE, \"^\");\n}\nfunction encodeQueryValue(input) {\n  return encode(typeof input === \"string\" ? input : JSON.stringify(input)).replace(PLUS_RE, \"%2B\").replace(ENC_SPACE_RE, \"+\").replace(HASH_RE, \"%23\").replace(AMPERSAND_RE, \"%26\").replace(ENC_BACKTICK_RE, \"`\").replace(ENC_CARET_RE, \"^\");\n}\nfunction encodeQueryKey(text) {\n  return encodeQueryValue(text).replace(EQUAL_RE, \"%3D\");\n}\nfunction encodePath(text) {\n  return encode(text).replace(HASH_RE, \"%23\").replace(IM_RE, \"%3F\").replace(ENC_ENC_SLASH_RE, \"%2F\").replace(AMPERSAND_RE, \"%26\").replace(PLUS_RE, \"%2B\");\n}\nfunction encodeParam(text) {\n  return encodePath(text).replace(SLASH_RE, \"%2F\");\n}\nfunction decode(text = \"\") {\n  try {\n    return decodeURIComponent(\"\" + text);\n  } catch {\n    return \"\" + text;\n  }\n}\nfunction decodePath(text) {\n  return decode(text.replace(ENC_SLASH_RE, \"%252F\"));\n}\nfunction decodeQueryValue(text) {\n  return decode(text.replace(PLUS_RE, \" \"));\n}\nfunction encodeHost(name = \"\") {\n  return toASCII(name);\n}\n\nfunction parseQuery(parametersString = \"\") {\n  const object = {};\n  if (parametersString[0] === \"?\") {\n    parametersString = parametersString.slice(1);\n  }\n  for (const parameter of parametersString.split(\"&\")) {\n    const s = parameter.match(/([^=]+)=?(.*)/) || [];\n    if (s.length < 2) {\n      continue;\n    }\n    const key = decode(s[1]);\n    if (key === \"__proto__\" || key === \"constructor\") {\n      continue;\n    }\n    const value = decodeQueryValue(s[2] || \"\");\n    if (typeof object[key] !== \"undefined\") {\n      if (Array.isArray(object[key])) {\n        object[key].push(value);\n      } else {\n        object[key] = [object[key], value];\n      }\n    } else {\n      object[key] = value;\n    }\n  }\n  return object;\n}\nfunction encodeQueryItem(key, value) {\n  if (typeof value === \"number\" || typeof value === \"boolean\") {\n    value = String(value);\n  }\n  if (!value) {\n    return encodeQueryKey(key);\n  }\n  if (Array.isArray(value)) {\n    return value.map((_value) => `${encodeQueryKey(key)}=${encodeQueryValue(_value)}`).join(\"&\");\n  }\n  return `${encodeQueryKey(key)}=${encodeQueryValue(value)}`;\n}\nfunction stringifyQuery(query) {\n  return Object.keys(query).filter((k) => query[k] !== void 0).map((k) => encodeQueryItem(k, query[k])).join(\"&\");\n}\n\nclass $URL {\n  constructor(input = \"\") {\n    this.query = {};\n    if (typeof input !== \"string\") {\n      throw new TypeError(\n        `URL input should be string received ${typeof input} (${input})`\n      );\n    }\n    const parsed = parseURL(input);\n    this.protocol = decode(parsed.protocol);\n    this.host = decode(parsed.host);\n    this.auth = decode(parsed.auth);\n    this.pathname = decodePath(parsed.pathname);\n    this.query = parseQuery(parsed.search);\n    this.hash = decode(parsed.hash);\n  }\n  get hostname() {\n    return parseHost(this.host).hostname;\n  }\n  get port() {\n    return parseHost(this.host).port || \"\";\n  }\n  get username() {\n    return parseAuth(this.auth).username;\n  }\n  get password() {\n    return parseAuth(this.auth).password || \"\";\n  }\n  get hasProtocol() {\n    return this.protocol.length;\n  }\n  get isAbsolute() {\n    return this.hasProtocol || this.pathname[0] === \"/\";\n  }\n  get search() {\n    const q = stringifyQuery(this.query);\n    return q.length > 0 ? \"?\" + q : \"\";\n  }\n  get searchParams() {\n    const p = new URLSearchParams();\n    for (const name in this.query) {\n      const value = this.query[name];\n      if (Array.isArray(value)) {\n        for (const v of value) {\n          p.append(name, v);\n        }\n      } else {\n        p.append(\n          name,\n          typeof value === \"string\" ? value : JSON.stringify(value)\n        );\n      }\n    }\n    return p;\n  }\n  get origin() {\n    return (this.protocol ? this.protocol + \"//\" : \"\") + encodeHost(this.host);\n  }\n  get fullpath() {\n    return encodePath(this.pathname) + this.search + encodeHash(this.hash);\n  }\n  get encodedAuth() {\n    if (!this.auth) {\n      return \"\";\n    }\n    const { username, password } = parseAuth(this.auth);\n    return encodeURIComponent(username) + (password ? \":\" + encodeURIComponent(password) : \"\");\n  }\n  get href() {\n    const auth = this.encodedAuth;\n    const originWithAuth = (this.protocol ? this.protocol + \"//\" : \"\") + (auth ? auth + \"@\" : \"\") + encodeHost(this.host);\n    return this.hasProtocol && this.isAbsolute ? originWithAuth + this.fullpath : this.fullpath;\n  }\n  append(url) {\n    if (url.hasProtocol) {\n      throw new Error(\"Cannot append a URL with protocol\");\n    }\n    Object.assign(this.query, url.query);\n    if (url.pathname) {\n      this.pathname = withTrailingSlash(this.pathname) + withoutLeadingSlash(url.pathname);\n    }\n    if (url.hash) {\n      this.hash = url.hash;\n    }\n  }\n  toJSON() {\n    return this.href;\n  }\n  toString() {\n    return this.href;\n  }\n}\n\nfunction isRelative(inputString) {\n  return [\"./\", \"../\"].some((string_) => inputString.startsWith(string_));\n}\nconst PROTOCOL_STRICT_REGEX = /^\\w{2,}:([/\\\\]{1,2})/;\nconst PROTOCOL_REGEX = /^\\w{2,}:([/\\\\]{2})?/;\nconst PROTOCOL_RELATIVE_REGEX = /^([/\\\\]\\s*){2,}[^/\\\\]/;\nfunction hasProtocol(inputString, opts = {}) {\n  if (typeof opts === \"boolean\") {\n    opts = { acceptRelative: opts };\n  }\n  if (opts.strict) {\n    return PROTOCOL_STRICT_REGEX.test(inputString);\n  }\n  return PROTOCOL_REGEX.test(inputString) || (opts.acceptRelative ? PROTOCOL_RELATIVE_REGEX.test(inputString) : false);\n}\nconst TRAILING_SLASH_RE = /\\/$|\\/\\?/;\nfunction hasTrailingSlash(input = \"\", queryParameters = false) {\n  if (!queryParameters) {\n    return input.endsWith(\"/\");\n  }\n  return TRAILING_SLASH_RE.test(input);\n}\nfunction withoutTrailingSlash(input = \"\", queryParameters = false) {\n  if (!queryParameters) {\n    return (hasTrailingSlash(input) ? input.slice(0, -1) : input) || \"/\";\n  }\n  if (!hasTrailingSlash(input, true)) {\n    return input || \"/\";\n  }\n  const [s0, ...s] = input.split(\"?\");\n  return (s0.slice(0, -1) || \"/\") + (s.length > 0 ? `?${s.join(\"?\")}` : \"\");\n}\nfunction withTrailingSlash(input = \"\", queryParameters = false) {\n  if (!queryParameters) {\n    return input.endsWith(\"/\") ? input : input + \"/\";\n  }\n  if (hasTrailingSlash(input, true)) {\n    return input || \"/\";\n  }\n  const [s0, ...s] = input.split(\"?\");\n  return s0 + \"/\" + (s.length > 0 ? `?${s.join(\"?\")}` : \"\");\n}\nfunction hasLeadingSlash(input = \"\") {\n  return input.startsWith(\"/\");\n}\nfunction withoutLeadingSlash(input = \"\") {\n  return (hasLeadingSlash(input) ? input.slice(1) : input) || \"/\";\n}\nfunction withLeadingSlash(input = \"\") {\n  return hasLeadingSlash(input) ? input : \"/\" + input;\n}\nfunction cleanDoubleSlashes(input = \"\") {\n  return input.split(\"://\").map((string_) => string_.replace(/\\/{2,}/g, \"/\")).join(\"://\");\n}\nfunction withBase(input, base) {\n  if (isEmptyURL(base) || hasProtocol(input)) {\n    return input;\n  }\n  const _base = withoutTrailingSlash(base);\n  if (input.startsWith(_base)) {\n    return input;\n  }\n  return joinURL(_base, input);\n}\nfunction withoutBase(input, base) {\n  if (isEmptyURL(base)) {\n    return input;\n  }\n  const _base = withoutTrailingSlash(base);\n  if (!input.startsWith(_base)) {\n    return input;\n  }\n  const trimmed = input.slice(_base.length);\n  return trimmed[0] === \"/\" ? trimmed : \"/\" + trimmed;\n}\nfunction withQuery(input, query) {\n  const parsed = parseURL(input);\n  const mergedQuery = { ...parseQuery(parsed.search), ...query };\n  parsed.search = stringifyQuery(mergedQuery);\n  return stringifyParsedURL(parsed);\n}\nfunction getQuery(input) {\n  return parseQuery(parseURL(input).search);\n}\nfunction isEmptyURL(url) {\n  return !url || url === \"/\";\n}\nfunction isNonEmptyURL(url) {\n  return url && url !== \"/\";\n}\nfunction joinURL(base, ...input) {\n  let url = base || \"\";\n  for (const index of input.filter((url2) => isNonEmptyURL(url2))) {\n    url = url ? withTrailingSlash(url) + withoutLeadingSlash(index) : index;\n  }\n  return url;\n}\nfunction withHttp(input) {\n  return withProtocol(input, \"http://\");\n}\nfunction withHttps(input) {\n  return withProtocol(input, \"https://\");\n}\nfunction withoutProtocol(input) {\n  return withProtocol(input, \"\");\n}\nfunction withProtocol(input, protocol) {\n  const match = input.match(PROTOCOL_REGEX);\n  if (!match) {\n    return protocol + input;\n  }\n  return protocol + input.slice(match[0].length);\n}\nfunction createURL(input) {\n  return new $URL(input);\n}\nfunction normalizeURL(input) {\n  return createURL(input).toString();\n}\nfunction resolveURL(base, ...input) {\n  const url = createURL(base);\n  for (const index of input.filter((url2) => isNonEmptyURL(url2))) {\n    url.append(createURL(index));\n  }\n  return url.toString();\n}\nfunction isSamePath(p1, p2) {\n  return decode(withoutTrailingSlash(p1)) === decode(withoutTrailingSlash(p2));\n}\nfunction isEqual(a, b, options = {}) {\n  if (!options.trailingSlash) {\n    a = withTrailingSlash(a);\n    b = withTrailingSlash(b);\n  }\n  if (!options.leadingSlash) {\n    a = withLeadingSlash(a);\n    b = withLeadingSlash(b);\n  }\n  if (!options.encoding) {\n    a = decode(a);\n    b = decode(b);\n  }\n  return a === b;\n}\n\nfunction parseURL(input = \"\", defaultProto) {\n  if (!hasProtocol(input, { acceptRelative: true })) {\n    return defaultProto ? parseURL(defaultProto + input) : parsePath(input);\n  }\n  const [protocol = \"\", auth, hostAndPath = \"\"] = (input.replace(/\\\\/g, \"/\").match(/([^/:]+:)?\\/\\/([^/@]+@)?(.*)/) || []).splice(1);\n  const [host = \"\", path = \"\"] = (hostAndPath.match(/([^#/?]*)(.*)?/) || []).splice(1);\n  const { pathname, search, hash } = parsePath(\n    path.replace(/\\/(?=[A-Za-z]:)/, \"\")\n  );\n  return {\n    protocol,\n    auth: auth ? auth.slice(0, Math.max(0, auth.length - 1)) : \"\",\n    host,\n    pathname,\n    search,\n    hash\n  };\n}\nfunction parsePath(input = \"\") {\n  const [pathname = \"\", search = \"\", hash = \"\"] = (input.match(/([^#?]*)(\\?[^#]*)?(#.*)?/) || []).splice(1);\n  return {\n    pathname,\n    search,\n    hash\n  };\n}\nfunction parseAuth(input = \"\") {\n  const [username, password] = input.split(\":\");\n  return {\n    username: decode(username),\n    password: decode(password)\n  };\n}\nfunction parseHost(input = \"\") {\n  const [hostname, port] = (input.match(/([^/:]*):?(\\d+)?/) || []).splice(1);\n  return {\n    hostname: decode(hostname),\n    port\n  };\n}\nfunction stringifyParsedURL(parsed) {\n  const fullpath = parsed.pathname + (parsed.search ? (parsed.search.startsWith(\"?\") ? \"\" : \"?\") + parsed.search : \"\") + parsed.hash;\n  if (!parsed.protocol) {\n    return fullpath;\n  }\n  return parsed.protocol + \"//\" + (parsed.auth ? parsed.auth + \"@\" : \"\") + parsed.host + fullpath;\n}\n\nexport { $URL, cleanDoubleSlashes, createURL, decode, decodePath, decodeQueryValue, encode, encodeHash, encodeHost, encodeParam, encodePath, encodeQueryItem, encodeQueryKey, encodeQueryValue, getQuery, hasLeadingSlash, hasProtocol, hasTrailingSlash, isEmptyURL, isEqual, isNonEmptyURL, isRelative, isSamePath, joinURL, normalizeURL, parseAuth, parseHost, parsePath, parseQuery, parseURL, resolveURL, stringifyParsedURL, stringifyQuery, withBase, withHttp, withHttps, withLeadingSlash, withProtocol, withQuery, withTrailingSlash, withoutBase, withoutLeadingSlash, withoutProtocol, withoutTrailingSlash };\n", "const NODE_TYPES = {\n  NORMAL: 0,\n  WILDCARD: 1,\n  PLACEHOLDER: 2\n};\n\nfunction createRouter(options = {}) {\n  const ctx = {\n    options,\n    rootNode: createRadixNode(),\n    staticRoutesMap: {}\n  };\n  const normalizeTrailingSlash = (p) => options.strictTrailingSlash ? p : p.replace(/\\/$/, \"\") || \"/\";\n  if (options.routes) {\n    for (const path in options.routes) {\n      insert(ctx, normalizeTrailingSlash(path), options.routes[path]);\n    }\n  }\n  return {\n    ctx,\n    // @ts-ignore\n    lookup: (path) => lookup(ctx, normalizeTrailingSlash(path)),\n    insert: (path, data) => insert(ctx, normalizeTrailingSlash(path), data),\n    remove: (path) => remove(ctx, normalizeTrailingSlash(path))\n  };\n}\nfunction lookup(ctx, path) {\n  const staticPathNode = ctx.staticRoutesMap[path];\n  if (staticPathNode) {\n    return staticPathNode.data;\n  }\n  const sections = path.split(\"/\");\n  const params = {};\n  let paramsFound = false;\n  let wildcardNode = null;\n  let node = ctx.rootNode;\n  let wildCardParam = null;\n  for (let i = 0; i < sections.length; i++) {\n    const section = sections[i];\n    if (node.wildcardChildNode !== null) {\n      wildcardNode = node.wildcardChildNode;\n      wildCardParam = sections.slice(i).join(\"/\");\n    }\n    const nextNode = node.children.get(section);\n    if (nextNode !== void 0) {\n      node = nextNode;\n    } else {\n      node = node.placeholderChildNode;\n      if (node !== null) {\n        params[node.paramName] = section;\n        paramsFound = true;\n      } else {\n        break;\n      }\n    }\n  }\n  if ((node === null || node.data === null) && wildcardNode !== null) {\n    node = wildcardNode;\n    params[node.paramName || \"_\"] = wildCardParam;\n    paramsFound = true;\n  }\n  if (!node) {\n    return null;\n  }\n  if (paramsFound) {\n    return {\n      ...node.data,\n      params: paramsFound ? params : void 0\n    };\n  }\n  return node.data;\n}\nfunction insert(ctx, path, data) {\n  let isStaticRoute = true;\n  const sections = path.split(\"/\");\n  let node = ctx.rootNode;\n  let _unnamedPlaceholderCtr = 0;\n  for (const section of sections) {\n    let childNode;\n    if (childNode = node.children.get(section)) {\n      node = childNode;\n    } else {\n      const type = getNodeType(section);\n      childNode = createRadixNode({ type, parent: node });\n      node.children.set(section, childNode);\n      if (type === NODE_TYPES.PLACEHOLDER) {\n        childNode.paramName = section === \"*\" ? `_${_unnamedPlaceholderCtr++}` : section.slice(1);\n        node.placeholderChildNode = childNode;\n        isStaticRoute = false;\n      } else if (type === NODE_TYPES.WILDCARD) {\n        node.wildcardChildNode = childNode;\n        childNode.paramName = section.slice(\n          3\n          /* \"**:\" */\n        ) || \"_\";\n        isStaticRoute = false;\n      }\n      node = childNode;\n    }\n  }\n  node.data = data;\n  if (isStaticRoute === true) {\n    ctx.staticRoutesMap[path] = node;\n  }\n  return node;\n}\nfunction remove(ctx, path) {\n  let success = false;\n  const sections = path.split(\"/\");\n  let node = ctx.rootNode;\n  for (const section of sections) {\n    node = node.children.get(section);\n    if (!node) {\n      return success;\n    }\n  }\n  if (node.data) {\n    const lastSection = sections[sections.length - 1];\n    node.data = null;\n    if (Object.keys(node.children).length === 0) {\n      const parentNode = node.parent;\n      parentNode.children.delete(lastSection);\n      parentNode.wildcardChildNode = null;\n      parentNode.placeholderChildNode = null;\n    }\n    success = true;\n  }\n  return success;\n}\nfunction createRadixNode(options = {}) {\n  return {\n    type: options.type || NODE_TYPES.NORMAL,\n    parent: options.parent || null,\n    children: /* @__PURE__ */ new Map(),\n    data: options.data || null,\n    paramName: options.paramName || null,\n    wildcardChildNode: null,\n    placeholderChildNode: null\n  };\n}\nfunction getNodeType(str) {\n  if (str.startsWith(\"**\")) {\n    return NODE_TYPES.WILDCARD;\n  }\n  if (str[0] === \":\" || str === \"*\") {\n    return NODE_TYPES.PLACEHOLDER;\n  }\n  return NODE_TYPES.NORMAL;\n}\n\nfunction toRouteMatcher(router) {\n  const table = _routerNodeToTable(\"\", router.ctx.rootNode);\n  return _createMatcher(table);\n}\nfunction _createMatcher(table) {\n  return {\n    ctx: { table },\n    matchAll: (path) => _matchRoutes(path, table)\n  };\n}\nfunction _createRouteTable() {\n  return {\n    static: /* @__PURE__ */ new Map(),\n    wildcard: /* @__PURE__ */ new Map(),\n    dynamic: /* @__PURE__ */ new Map()\n  };\n}\nfunction _matchRoutes(path, table) {\n  const matches = [];\n  for (const [key, value] of _sortRoutesMap(table.wildcard)) {\n    if (path.startsWith(key)) {\n      matches.push(value);\n    }\n  }\n  for (const [key, value] of _sortRoutesMap(table.dynamic)) {\n    if (path.startsWith(key + \"/\")) {\n      const subPath = \"/\" + path.slice(key.length).split(\"/\").splice(2).join(\"/\");\n      matches.push(..._matchRoutes(subPath, value));\n    }\n  }\n  const staticMatch = table.static.get(path);\n  if (staticMatch) {\n    matches.push(staticMatch);\n  }\n  return matches.filter(Boolean);\n}\nfunction _sortRoutesMap(m) {\n  return [...m.entries()].sort((a, b) => a[0].length - b[0].length);\n}\nfunction _routerNodeToTable(initialPath, initialNode) {\n  const table = _createRouteTable();\n  function _addNode(path, node) {\n    if (path) {\n      if (node.type === NODE_TYPES.NORMAL && !(path.includes(\"*\") || path.includes(\":\"))) {\n        table.static.set(path, node.data);\n      } else if (node.type === NODE_TYPES.WILDCARD) {\n        table.wildcard.set(path.replace(\"/**\", \"\"), node.data);\n      } else if (node.type === NODE_TYPES.PLACEHOLDER) {\n        const subTable = _routerNodeToTable(\"\", node);\n        if (node.data) {\n          subTable.static.set(\"/\", node.data);\n        }\n        table.dynamic.set(path.replace(/\\/\\*|\\/:\\w+/, \"\"), subTable);\n        return;\n      }\n    }\n    for (const [childPath, child] of node.children.entries()) {\n      _addNode(`${path}/${childPath}`.replace(\"//\", \"/\"), child);\n    }\n  }\n  _addNode(initialPath, initialNode);\n  return table;\n}\n\nexport { NODE_TYPES, createRouter, toRouteMatcher };\n", "const suspectProtoRx = /\"(?:_|\\\\u0{2}5[Ff]){2}(?:p|\\\\u0{2}70)(?:r|\\\\u0{2}72)(?:o|\\\\u0{2}6[Ff])(?:t|\\\\u0{2}74)(?:o|\\\\u0{2}6[Ff])(?:_|\\\\u0{2}5[Ff]){2}\"\\s*:/;\nconst suspectConstructorRx = /\"(?:c|\\\\u0063)(?:o|\\\\u006[Ff])(?:n|\\\\u006[Ee])(?:s|\\\\u0073)(?:t|\\\\u0074)(?:r|\\\\u0072)(?:u|\\\\u0075)(?:c|\\\\u0063)(?:t|\\\\u0074)(?:o|\\\\u006[Ff])(?:r|\\\\u0072)\"\\s*:/;\nconst JsonSigRx = /^\\s*[\"[{]|^\\s*-?\\d[\\d.]{0,14}\\s*$/;\nfunction jsonParseTransform(key, value) {\n  if (key === \"__proto__\") {\n    return;\n  }\n  if (key === \"constructor\" && value && typeof value === \"object\" && \"prototype\" in value) {\n    return;\n  }\n  return value;\n}\nfunction destr(value, options = {}) {\n  if (typeof value !== \"string\") {\n    return value;\n  }\n  const _lval = value.toLowerCase().trim();\n  if (_lval === \"true\") {\n    return true;\n  }\n  if (_lval === \"false\") {\n    return false;\n  }\n  if (_lval === \"null\") {\n    return null;\n  }\n  if (_lval === \"nan\") {\n    return Number.NaN;\n  }\n  if (_lval === \"infinity\") {\n    return Number.POSITIVE_INFINITY;\n  }\n  if (_lval === \"undefined\") {\n    return void 0;\n  }\n  if (!JsonSigRx.test(value)) {\n    if (options.strict) {\n      throw new SyntaxError(\"Invalid JSON\");\n    }\n    return value;\n  }\n  try {\n    if (suspectProtoRx.test(value) || suspectConstructorRx.test(value)) {\n      return JSON.parse(value, jsonParseTransform);\n    }\n    return JSON.parse(value);\n  } catch (error) {\n    if (options.strict) {\n      throw error;\n    }\n    return value;\n  }\n}\n\nexport { destr as default };\n", "const fieldContentRegExp = /^[\\u0009\\u0020-\\u007E\\u0080-\\u00FF]+$/;\nfunction parse(str, options) {\n  if (typeof str !== \"string\") {\n    throw new TypeError(\"argument str must be a string\");\n  }\n  const obj = {};\n  const opt = options || {};\n  const dec = opt.decode || decode;\n  let index = 0;\n  while (index < str.length) {\n    const eqIdx = str.indexOf(\"=\", index);\n    if (eqIdx === -1) {\n      break;\n    }\n    let endIdx = str.indexOf(\";\", index);\n    if (endIdx === -1) {\n      endIdx = str.length;\n    } else if (endIdx < eqIdx) {\n      index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\n      continue;\n    }\n    const key = str.slice(index, eqIdx).trim();\n    if (void 0 === obj[key]) {\n      let val = str.slice(eqIdx + 1, endIdx).trim();\n      if (val.codePointAt(0) === 34) {\n        val = val.slice(1, -1);\n      }\n      obj[key] = tryDecode(val, dec);\n    }\n    index = endIdx + 1;\n  }\n  return obj;\n}\nfunction serialize(name, value, options) {\n  const opt = options || {};\n  const enc = opt.encode || encode;\n  if (typeof enc !== \"function\") {\n    throw new TypeError(\"option encode is invalid\");\n  }\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError(\"argument name is invalid\");\n  }\n  const encodedValue = enc(value);\n  if (encodedValue && !fieldContentRegExp.test(encodedValue)) {\n    throw new TypeError(\"argument val is invalid\");\n  }\n  let str = name + \"=\" + encodedValue;\n  if (void 0 !== opt.maxAge && opt.maxAge !== null) {\n    const maxAge = opt.maxAge - 0;\n    if (Number.isNaN(maxAge) || !Number.isFinite(maxAge)) {\n      throw new TypeError(\"option maxAge is invalid\");\n    }\n    str += \"; Max-Age=\" + Math.floor(maxAge);\n  }\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError(\"option domain is invalid\");\n    }\n    str += \"; Domain=\" + opt.domain;\n  }\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError(\"option path is invalid\");\n    }\n    str += \"; Path=\" + opt.path;\n  }\n  if (opt.expires) {\n    if (!isDate(opt.expires) || Number.isNaN(opt.expires.valueOf())) {\n      throw new TypeError(\"option expires is invalid\");\n    }\n    str += \"; Expires=\" + opt.expires.toUTCString();\n  }\n  if (opt.httpOnly) {\n    str += \"; HttpOnly\";\n  }\n  if (opt.secure) {\n    str += \"; Secure\";\n  }\n  if (opt.priority) {\n    const priority = typeof opt.priority === \"string\" ? opt.priority.toLowerCase() : opt.priority;\n    switch (priority) {\n      case \"low\":\n        str += \"; Priority=Low\";\n        break;\n      case \"medium\":\n        str += \"; Priority=Medium\";\n        break;\n      case \"high\":\n        str += \"; Priority=High\";\n        break;\n      default:\n        throw new TypeError(\"option priority is invalid\");\n    }\n  }\n  if (opt.sameSite) {\n    const sameSite = typeof opt.sameSite === \"string\" ? opt.sameSite.toLowerCase() : opt.sameSite;\n    switch (sameSite) {\n      case true:\n        str += \"; SameSite=Strict\";\n        break;\n      case \"lax\":\n        str += \"; SameSite=Lax\";\n        break;\n      case \"strict\":\n        str += \"; SameSite=Strict\";\n        break;\n      case \"none\":\n        str += \"; SameSite=None\";\n        break;\n      default:\n        throw new TypeError(\"option sameSite is invalid\");\n    }\n  }\n  return str;\n}\nfunction isDate(val) {\n  return Object.prototype.toString.call(val) === \"[object Date]\" || val instanceof Date;\n}\nfunction tryDecode(str, decode2) {\n  try {\n    return decode2(str);\n  } catch {\n    return str;\n  }\n}\nfunction decode(str) {\n  return str.includes(\"%\") ? decodeURIComponent(str) : str;\n}\nfunction encode(val) {\n  return encodeURIComponent(val);\n}\n\nexport { parse, serialize };\n", "const webCrypto = globalThis.crypto;\nconst subtle = webCrypto.subtle;\nconst randomUUID = () => {\n  return webCrypto.randomUUID();\n};\nconst getRandomValues = (array) => {\n  return webCrypto.getRandomValues(array);\n};\nconst _crypto = {\n  randomUUID,\n  getRandomValues,\n  subtle\n};\n\nexport { _crypto as default, getRandomValues, randomUUID, subtle };\n", "// node_modules/.pnpm/@aws-sdk+util-base64@3.310.0/node_modules/@aws-sdk/util-base64/dist-es/constants.browser.js\nvar alphabetByEncoding = {};\nvar alphabetByValue = new Array(64);\nfor (let i = 0, start = \"A\".charCodeAt(0), limit = \"Z\".charCodeAt(0); i + start <= limit; i++) {\n  const char = String.fromCharCode(i + start);\n  alphabetByEncoding[char] = i;\n  alphabetByValue[i] = char;\n}\nfor (let i = 0, start = \"a\".charCodeAt(0), limit = \"z\".charCodeAt(0); i + start <= limit; i++) {\n  const char = String.fromCharCode(i + start);\n  const index = i + 26;\n  alphabetByEncoding[char] = index;\n  alphabetByValue[index] = char;\n}\nfor (let i = 0; i < 10; i++) {\n  alphabetByEncoding[i.toString(10)] = i + 52;\n  const char = i.toString(10);\n  const index = i + 52;\n  alphabetByEncoding[char] = index;\n  alphabetByValue[index] = char;\n}\nalphabetByEncoding[\"+\"] = 62;\nalphabetByValue[62] = \"+\";\nalphabetByEncoding[\"/\"] = 63;\nalphabetByValue[63] = \"/\";\nvar bitsPerLetter = 6;\nvar bitsPerByte = 8;\nvar maxLetterValue = 63;\n\n// node_modules/.pnpm/@aws-sdk+util-base64@3.310.0/node_modules/@aws-sdk/util-base64/dist-es/fromBase64.browser.js\nvar fromBase64 = (input) => {\n  let totalByteLength = input.length / 4 * 3;\n  if (input.slice(-2) === \"==\") {\n    totalByteLength -= 2;\n  } else if (input.slice(-1) === \"=\") {\n    totalByteLength--;\n  }\n  const out = new ArrayBuffer(totalByteLength);\n  const dataView = new DataView(out);\n  for (let i = 0; i < input.length; i += 4) {\n    let bits = 0;\n    let bitLength = 0;\n    for (let j = i, limit = i + 3; j <= limit; j++) {\n      if (input[j] !== \"=\") {\n        if (!(input[j] in alphabetByEncoding)) {\n          throw new TypeError(`Invalid character ${input[j]} in base64 string.`);\n        }\n        bits |= alphabetByEncoding[input[j]] << (limit - j) * bitsPerLetter;\n        bitLength += bitsPerLetter;\n      } else {\n        bits >>= bitsPerLetter;\n      }\n    }\n    const chunkOffset = i / 4 * 3;\n    bits >>= bitLength % bitsPerByte;\n    const byteLength = Math.floor(bitLength / bitsPerByte);\n    for (let k = 0; k < byteLength; k++) {\n      const offset = (byteLength - k - 1) * bitsPerByte;\n      dataView.setUint8(chunkOffset + k, (bits & 255 << offset) >> offset);\n    }\n  }\n  return new Uint8Array(out);\n};\n\n// node_modules/.pnpm/@aws-sdk+util-base64@3.310.0/node_modules/@aws-sdk/util-base64/dist-es/toBase64.browser.js\nfunction toBase64(input) {\n  let str = \"\";\n  for (let i = 0; i < input.length; i += 3) {\n    let bits = 0;\n    let bitLength = 0;\n    for (let j = i, limit = Math.min(i + 3, input.length); j < limit; j++) {\n      bits |= input[j] << (limit - j - 1) * bitsPerByte;\n      bitLength += bitsPerByte;\n    }\n    const bitClusterCount = Math.ceil(bitLength / bitsPerLetter);\n    bits <<= bitClusterCount * bitsPerLetter - bitLength;\n    for (let k = 1; k <= bitClusterCount; k++) {\n      const offset = (bitClusterCount - k) * bitsPerLetter;\n      str += alphabetByValue[(bits & maxLetterValue << offset) >> offset];\n    }\n    str += \"==\".slice(0, 4 - bitClusterCount);\n  }\n  return str;\n}\n\n// src/index.ts\nvar stringToBuffer = (value) => {\n  return new TextEncoder().encode(value);\n};\nvar bufferToString = (value) => {\n  return new TextDecoder().decode(value);\n};\nvar base64urlEncode = (value) => toBase64(value instanceof Uint8Array ? value : stringToBuffer(value)).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\nvar base64urlDecode = (value) => fromBase64(\n  value.replace(/-/g, \"+\").replace(/_/g, \"/\") + Array((4 - value.length % 4) % 4 + 1).join(\"=\")\n);\nvar defaults = {\n  encryption: { saltBits: 256, algorithm: \"aes-256-cbc\", iterations: 1, minPasswordlength: 32 },\n  integrity: { saltBits: 256, algorithm: \"sha256\", iterations: 1, minPasswordlength: 32 },\n  ttl: 0,\n  timestampSkewSec: 60,\n  localtimeOffsetMsec: 0\n};\nvar clone = (options) => ({\n  ...options,\n  encryption: { ...options.encryption },\n  integrity: { ...options.integrity }\n});\nvar algorithms = {\n  \"aes-128-ctr\": { keyBits: 128, ivBits: 128, name: \"AES-CTR\" },\n  \"aes-256-cbc\": { keyBits: 256, ivBits: 128, name: \"AES-CBC\" },\n  sha256: { keyBits: 256, name: \"SHA-256\" }\n};\nvar macFormatVersion = \"2\";\nvar macPrefix = `Fe26.${macFormatVersion}`;\nvar randomBytes = (_crypto, size) => {\n  const bytes = new Uint8Array(size);\n  _crypto.getRandomValues(bytes);\n  return bytes;\n};\nvar randomBits = (_crypto, bits) => {\n  if (bits < 1)\n    throw Error(\"Invalid random bits count\");\n  const bytes = Math.ceil(bits / 8);\n  return randomBytes(_crypto, bytes);\n};\nvar pbkdf2 = async (_crypto, password, salt, iterations, keyLength, hash) => {\n  const passwordBuffer = stringToBuffer(password);\n  const importedKey = await _crypto.subtle.importKey(\"raw\", passwordBuffer, \"PBKDF2\", false, [\n    \"deriveBits\"\n  ]);\n  const saltBuffer = stringToBuffer(salt);\n  const params = { name: \"PBKDF2\", hash, salt: saltBuffer, iterations };\n  const derivation = await _crypto.subtle.deriveBits(params, importedKey, keyLength * 8);\n  return derivation;\n};\nvar generateKey = async (_crypto, password, options) => {\n  if (password == null || !password.length)\n    throw new Error(\"Empty password\");\n  if (options == null || typeof options !== \"object\")\n    throw new Error(\"Bad options\");\n  if (!(options.algorithm in algorithms))\n    throw new Error(`Unknown algorithm: ${options.algorithm}`);\n  const algorithm = algorithms[options.algorithm];\n  const result = {};\n  const hmac = options.hmac ?? false;\n  const id = hmac ? { name: \"HMAC\", hash: algorithm.name } : { name: algorithm.name };\n  const usage = hmac ? [\"sign\", \"verify\"] : [\"encrypt\", \"decrypt\"];\n  if (typeof password === \"string\") {\n    if (password.length < options.minPasswordlength)\n      throw new Error(\n        `Password string too short (min ${options.minPasswordlength} characters required)`\n      );\n    let { salt = \"\" } = options;\n    if (!salt) {\n      const { saltBits = 0 } = options;\n      if (!saltBits)\n        throw new Error(\"Missing salt and saltBits options\");\n      const randomSalt = randomBits(_crypto, saltBits);\n      salt = [...new Uint8Array(randomSalt)].map((x) => x.toString(16).padStart(2, \"0\")).join(\"\");\n    }\n    const derivedKey = await pbkdf2(\n      _crypto,\n      password,\n      salt,\n      options.iterations,\n      algorithm.keyBits / 8,\n      \"SHA-1\"\n    );\n    const importedEncryptionKey = await _crypto.subtle.importKey(\n      \"raw\",\n      derivedKey,\n      id,\n      false,\n      usage\n    );\n    result.key = importedEncryptionKey;\n    result.salt = salt;\n  } else {\n    if (password.length < algorithm.keyBits / 8)\n      throw new Error(\"Key buffer (password) too small\");\n    result.key = await _crypto.subtle.importKey(\"raw\", password, id, false, usage);\n    result.salt = \"\";\n  }\n  if (options.iv)\n    result.iv = options.iv;\n  else if (\"ivBits\" in algorithm)\n    result.iv = randomBits(_crypto, algorithm.ivBits);\n  return result;\n};\nvar encrypt = async (_crypto, password, options, data) => {\n  const key = await generateKey(_crypto, password, options);\n  const textBuffer = stringToBuffer(data);\n  const encrypted = await _crypto.subtle.encrypt(\n    { name: algorithms[options.algorithm].name, iv: key.iv },\n    key.key,\n    textBuffer\n  );\n  return { encrypted: new Uint8Array(encrypted), key };\n};\nvar decrypt = async (_crypto, password, options, data) => {\n  const key = await generateKey(_crypto, password, options);\n  const decrypted = await _crypto.subtle.decrypt(\n    { name: algorithms[options.algorithm].name, iv: key.iv },\n    key.key,\n    typeof data === \"string\" ? stringToBuffer(data) : data\n  );\n  return bufferToString(new Uint8Array(decrypted));\n};\nvar hmacWithPassword = async (_crypto, password, options, data) => {\n  const key = await generateKey(_crypto, password, { ...options, hmac: true });\n  const textBuffer = stringToBuffer(data);\n  const signed = await _crypto.subtle.sign({ name: \"HMAC\" }, key.key, textBuffer);\n  const digest = base64urlEncode(new Uint8Array(signed));\n  return { digest, salt: key.salt };\n};\nvar normalizePassword = (password) => {\n  if (typeof password === \"string\" || password instanceof Uint8Array)\n    return { encryption: password, integrity: password };\n  if (\"secret\" in password)\n    return { id: password.id, encryption: password.secret, integrity: password.secret };\n  return { id: password.id, encryption: password.encryption, integrity: password.integrity };\n};\nvar seal = async (_crypto, object, password, options) => {\n  if (!password)\n    throw Error(\"Empty password\");\n  const opts = clone(options);\n  const now = Date.now() + (opts.localtimeOffsetMsec || 0);\n  const objectString = JSON.stringify(object);\n  const pass = normalizePassword(password);\n  const { id = \"\" } = pass;\n  if (id && !/^\\w+$/.test(id))\n    throw new Error(\"Invalid password id\");\n  const { encrypted, key } = await encrypt(_crypto, pass.encryption, opts.encryption, objectString);\n  const encryptedB64 = base64urlEncode(new Uint8Array(encrypted));\n  const iv = base64urlEncode(key.iv);\n  const expiration = opts.ttl ? now + opts.ttl : \"\";\n  const macBaseString = `${macPrefix}*${id}*${key.salt}*${iv}*${encryptedB64}*${expiration}`;\n  const mac = await hmacWithPassword(_crypto, pass.integrity, opts.integrity, macBaseString);\n  const sealed = `${macBaseString}*${mac.salt}*${mac.digest}`;\n  return sealed;\n};\nvar fixedTimeComparison = (a, b) => {\n  let mismatch = a.length === b.length ? 0 : 1;\n  if (mismatch)\n    b = a;\n  for (let i = 0; i < a.length; i += 1)\n    mismatch |= a.charCodeAt(i) ^ b.charCodeAt(i);\n  return mismatch === 0;\n};\nvar unseal = async (_crypto, sealed, password, options) => {\n  if (!password)\n    throw Error(\"Empty password\");\n  const opts = clone(options);\n  const now = Date.now() + (opts.localtimeOffsetMsec || 0);\n  const parts = sealed.split(\"*\");\n  if (parts.length !== 8)\n    throw new Error(\"Incorrect number of sealed components\");\n  const prefix = parts[0];\n  let passwordId = parts[1];\n  const encryptionSalt = parts[2];\n  const encryptionIv = parts[3];\n  const encryptedB64 = parts[4];\n  const expiration = parts[5];\n  const hmacSalt = parts[6];\n  const hmac = parts[7];\n  const macBaseString = `${prefix}*${passwordId}*${encryptionSalt}*${encryptionIv}*${encryptedB64}*${expiration}`;\n  if (macPrefix !== prefix)\n    throw new Error(\"Wrong mac prefix\");\n  if (expiration) {\n    if (!/^\\d+$/.exec(expiration))\n      throw new Error(\"Invalid expiration\");\n    const exp = parseInt(expiration, 10);\n    if (exp <= now - opts.timestampSkewSec * 1e3)\n      throw new Error(\"Expired seal\");\n  }\n  if (typeof password === \"undefined\" || typeof password === \"string\" && password.length === 0)\n    throw new Error(\"Empty password\");\n  let pass = \"\";\n  passwordId = passwordId || \"default\";\n  if (typeof password === \"string\" || password instanceof Uint8Array)\n    pass = password;\n  else if (!(passwordId in password))\n    throw new Error(`Cannot find password: ${passwordId}`);\n  else\n    pass = password[passwordId];\n  pass = normalizePassword(pass);\n  const macOptions = opts.integrity;\n  macOptions.salt = hmacSalt;\n  const mac = await hmacWithPassword(_crypto, pass.integrity, macOptions, macBaseString);\n  if (!fixedTimeComparison(mac.digest, hmac))\n    throw new Error(\"Bad hmac value\");\n  const encrypted = base64urlDecode(encryptedB64);\n  const decryptOptions = opts.encryption;\n  decryptOptions.salt = encryptionSalt;\n  decryptOptions.iv = base64urlDecode(encryptionIv);\n  const decrypted = await decrypt(_crypto, pass.encryption, decryptOptions, encrypted);\n  if (decrypted)\n    return JSON.parse(decrypted);\n  return null;\n};\n\nexport { algorithms, base64urlDecode, base64urlEncode, bufferToString, clone, decrypt, defaults, encrypt, generateKey, hmacWithPassword, macFormatVersion, macPrefix, randomBits, seal, stringToBuffer, unseal };\n", "function isObject(value) {\n  return value !== null && typeof value === \"object\";\n}\nfunction _defu(baseObject, defaults, namespace = \".\", merger) {\n  if (!isObject(defaults)) {\n    return _defu(baseObject, {}, namespace, merger);\n  }\n  const object = Object.assign({}, defaults);\n  for (const key in baseObject) {\n    if (key === \"__proto__\" || key === \"constructor\") {\n      continue;\n    }\n    const value = baseObject[key];\n    if (value === null || value === void 0) {\n      continue;\n    }\n    if (merger && merger(object, key, value, namespace)) {\n      continue;\n    }\n    if (Array.isArray(value) && Array.isArray(object[key])) {\n      object[key] = [...value, ...object[key]];\n    } else if (isObject(value) && isObject(object[key])) {\n      object[key] = _defu(\n        value,\n        object[key],\n        (namespace ? `${namespace}.` : \"\") + key.toString(),\n        merger\n      );\n    } else {\n      object[key] = value;\n    }\n  }\n  return object;\n}\nfunction createDefu(merger) {\n  return (...arguments_) => (\n    // eslint-disable-next-line unicorn/no-array-reduce\n    arguments_.reduce((p, c) => _defu(p, c, \"\", merger), {})\n  );\n}\nconst defu = createDefu();\nconst defuFn = createDefu((object, key, currentValue) => {\n  if (typeof object[key] !== \"undefined\" && typeof currentValue === \"function\") {\n    object[key] = currentValue(object[key]);\n    return true;\n  }\n});\nconst defuArrayFn = createDefu((object, key, currentValue) => {\n  if (Array.isArray(object[key]) && typeof currentValue === \"function\") {\n    object[key] = currentValue(object[key]);\n    return true;\n  }\n});\n\nexport { createDefu, defu as default, defu, defuArrayFn, defuFn };\n", "import { withoutTrailingSlash, withoutBase, getQuery as getQuery$1 } from 'ufo';\nimport { createRouter as createRouter$1 } from 'radix3';\nimport destr from 'destr';\nimport { parse as parse$1, serialize } from 'cookie-es';\nimport crypto from 'uncrypto';\nimport { seal, defaults, unseal } from 'iron-webcrypto';\nimport { defu } from 'defu';\n\nfunction useBase(base, handler) {\n  base = withoutTrailingSlash(base);\n  if (!base) {\n    return handler;\n  }\n  return eventHandler((event) => {\n    event.node.req.originalUrl = event.node.req.originalUrl || event.node.req.url || \"/\";\n    event.node.req.url = withoutBase(event.node.req.url || \"/\", base);\n    return handler(event);\n  });\n}\n\nfunction parse(multipartBodyBuffer, boundary) {\n  let lastline = \"\";\n  let state = 0 /* INIT */;\n  let buffer = [];\n  const allParts = [];\n  let currentPartHeaders = [];\n  for (let i = 0; i < multipartBodyBuffer.length; i++) {\n    const prevByte = i > 0 ? multipartBodyBuffer[i - 1] : null;\n    const currByte = multipartBodyBuffer[i];\n    const newLineChar = currByte === 10 || currByte === 13;\n    if (!newLineChar) {\n      lastline += String.fromCodePoint(currByte);\n    }\n    const newLineDetected = currByte === 10 && prevByte === 13;\n    if (0 /* INIT */ === state && newLineDetected) {\n      if (\"--\" + boundary === lastline) {\n        state = 1 /* READING_HEADERS */;\n      }\n      lastline = \"\";\n    } else if (1 /* READING_HEADERS */ === state && newLineDetected) {\n      if (lastline.length > 0) {\n        const i2 = lastline.indexOf(\":\");\n        if (i2 > 0) {\n          const name = lastline.slice(0, i2).toLowerCase();\n          const value = lastline.slice(i2 + 1).trim();\n          currentPartHeaders.push([name, value]);\n        }\n      } else {\n        state = 2 /* READING_DATA */;\n        buffer = [];\n      }\n      lastline = \"\";\n    } else if (2 /* READING_DATA */ === state) {\n      if (lastline.length > boundary.length + 4) {\n        lastline = \"\";\n      }\n      if (\"--\" + boundary === lastline) {\n        const j = buffer.length - lastline.length;\n        const part = buffer.slice(0, j - 1);\n        allParts.push(process(part, currentPartHeaders));\n        buffer = [];\n        currentPartHeaders = [];\n        lastline = \"\";\n        state = 3 /* READING_PART_SEPARATOR */;\n      } else {\n        buffer.push(currByte);\n      }\n      if (newLineDetected) {\n        lastline = \"\";\n      }\n    } else if (3 /* READING_PART_SEPARATOR */ === state && newLineDetected) {\n      state = 1 /* READING_HEADERS */;\n    }\n  }\n  return allParts;\n}\nfunction process(data, headers) {\n  const dataObj = {};\n  const contentDispositionHeader = headers.find((h) => h[0] === \"content-disposition\")?.[1] || \"\";\n  for (const i of contentDispositionHeader.split(\";\")) {\n    const s = i.split(\"=\");\n    if (s.length !== 2) {\n      continue;\n    }\n    const key = (s[0] || \"\").trim();\n    if (key === \"name\" || key === \"filename\") {\n      dataObj[key] = (s[1] || \"\").trim().replace(/\"/g, \"\");\n    }\n  }\n  const contentType = headers.find((h) => h[0] === \"content-type\")?.[1] || \"\";\n  if (contentType) {\n    dataObj.type = contentType;\n  }\n  dataObj.data = Buffer.from(data);\n  return dataObj;\n}\n\nclass H3Error extends Error {\n  constructor() {\n    super(...arguments);\n    this.statusCode = 500;\n    this.fatal = false;\n    this.unhandled = false;\n    this.statusMessage = void 0;\n  }\n  toJSON() {\n    const obj = {\n      message: this.message,\n      statusCode: sanitizeStatusCode(this.statusCode, 500)\n    };\n    if (this.statusMessage) {\n      obj.statusMessage = sanitizeStatusMessage(this.statusMessage);\n    }\n    if (this.data !== void 0) {\n      obj.data = this.data;\n    }\n    return obj;\n  }\n}\nH3Error.__h3_error__ = true;\nfunction createError(input) {\n  if (typeof input === \"string\") {\n    return new H3Error(input);\n  }\n  if (isError(input)) {\n    return input;\n  }\n  const err = new H3Error(\n    input.message ?? input.statusMessage,\n    // @ts-ignore\n    input.cause ? { cause: input.cause } : void 0\n  );\n  if (\"stack\" in input) {\n    try {\n      Object.defineProperty(err, \"stack\", {\n        get() {\n          return input.stack;\n        }\n      });\n    } catch {\n      try {\n        err.stack = input.stack;\n      } catch {\n      }\n    }\n  }\n  if (input.data) {\n    err.data = input.data;\n  }\n  if (input.statusCode) {\n    err.statusCode = sanitizeStatusCode(input.statusCode, err.statusCode);\n  } else if (input.status) {\n    err.statusCode = sanitizeStatusCode(input.status, err.statusCode);\n  }\n  if (input.statusMessage) {\n    err.statusMessage = input.statusMessage;\n  } else if (input.statusText) {\n    err.statusMessage = input.statusText;\n  }\n  if (err.statusMessage) {\n    const originalMessage = err.statusMessage;\n    const sanitizedMessage = sanitizeStatusMessage(err.statusMessage);\n    if (sanitizedMessage !== originalMessage) {\n      console.warn(\n        \"[h3] Please prefer using `message` for longer error messages instead of `statusMessage`. In the future `statusMessage` will be sanitized by default.\"\n      );\n    }\n  }\n  if (input.fatal !== void 0) {\n    err.fatal = input.fatal;\n  }\n  if (input.unhandled !== void 0) {\n    err.unhandled = input.unhandled;\n  }\n  return err;\n}\nfunction sendError(event, error, debug) {\n  if (event.node.res.writableEnded) {\n    return;\n  }\n  const h3Error = isError(error) ? error : createError(error);\n  const responseBody = {\n    statusCode: h3Error.statusCode,\n    statusMessage: h3Error.statusMessage,\n    stack: [],\n    data: h3Error.data\n  };\n  if (debug) {\n    responseBody.stack = (h3Error.stack || \"\").split(\"\\n\").map((l) => l.trim());\n  }\n  if (event.node.res.writableEnded) {\n    return;\n  }\n  const _code = Number.parseInt(h3Error.statusCode);\n  setResponseStatus(event, _code, h3Error.statusMessage);\n  event.node.res.setHeader(\"content-type\", MIMES.json);\n  event.node.res.end(JSON.stringify(responseBody, void 0, 2));\n}\nfunction isError(input) {\n  return input?.constructor?.__h3_error__ === true;\n}\n\nfunction getQuery(event) {\n  return getQuery$1(event.node.req.url || \"\");\n}\nfunction getRouterParams(event) {\n  return event.context.params || {};\n}\nfunction getRouterParam(event, name) {\n  const params = getRouterParams(event);\n  return params[name];\n}\nfunction getMethod(event, defaultMethod = \"GET\") {\n  return (event.node.req.method || defaultMethod).toUpperCase();\n}\nfunction isMethod(event, expected, allowHead) {\n  const method = getMethod(event);\n  if (allowHead && method === \"HEAD\") {\n    return true;\n  }\n  if (typeof expected === \"string\") {\n    if (method === expected) {\n      return true;\n    }\n  } else if (expected.includes(method)) {\n    return true;\n  }\n  return false;\n}\nfunction assertMethod(event, expected, allowHead) {\n  if (!isMethod(event, expected, allowHead)) {\n    throw createError({\n      statusCode: 405,\n      statusMessage: \"HTTP method is not allowed.\"\n    });\n  }\n}\nfunction getRequestHeaders(event) {\n  const _headers = {};\n  for (const key in event.node.req.headers) {\n    const val = event.node.req.headers[key];\n    _headers[key] = Array.isArray(val) ? val.filter(Boolean).join(\", \") : val;\n  }\n  return _headers;\n}\nconst getHeaders = getRequestHeaders;\nfunction getRequestHeader(event, name) {\n  const headers = getRequestHeaders(event);\n  const value = headers[name.toLowerCase()];\n  return value;\n}\nconst getHeader = getRequestHeader;\nfunction getRequestHost(event, opts = {}) {\n  if (opts.xForwardedHost) {\n    const xForwardedHost = event.node.req.headers[\"x-forwarded-host\"];\n    if (xForwardedHost) {\n      return xForwardedHost;\n    }\n  }\n  return event.node.req.headers.host || \"localhost\";\n}\nfunction getRequestProtocol(event, opts = {}) {\n  if (opts.xForwardedProto !== false && event.node.req.headers[\"x-forwarded-proto\"] === \"https\") {\n    return \"https\";\n  }\n  return event.node.req.connection.encrypted ? \"https\" : \"http\";\n}\nconst DOUBLE_SLASH_RE = /[/\\\\]{2,}/g;\nfunction getRequestPath(event) {\n  const path = (event.node.req.url || \"/\").replace(DOUBLE_SLASH_RE, \"/\");\n  return path;\n}\nfunction getRequestURL(event, opts = {}) {\n  const host = getRequestHost(event, opts);\n  const protocol = getRequestProtocol(event);\n  const path = getRequestPath(event);\n  return new URL(path, `${protocol}://${host}`);\n}\n\nconst RawBodySymbol = Symbol.for(\"h3RawBody\");\nconst ParsedBodySymbol = Symbol.for(\"h3ParsedBody\");\nconst PayloadMethods$1 = [\"PATCH\", \"POST\", \"PUT\", \"DELETE\"];\nfunction readRawBody(event, encoding = \"utf8\") {\n  assertMethod(event, PayloadMethods$1);\n  const _rawBody = event.node.req[RawBodySymbol] || event.node.req.body;\n  if (_rawBody) {\n    const promise2 = Promise.resolve(_rawBody).then(\n      (_resolved) => Buffer.isBuffer(_resolved) ? _resolved : Buffer.from(_resolved)\n    );\n    return encoding ? promise2.then((buff) => buff.toString(encoding)) : promise2;\n  }\n  if (!Number.parseInt(event.node.req.headers[\"content-length\"] || \"\")) {\n    return Promise.resolve(void 0);\n  }\n  const promise = event.node.req[RawBodySymbol] = new Promise(\n    (resolve, reject) => {\n      const bodyData = [];\n      event.node.req.on(\"error\", (err) => {\n        reject(err);\n      }).on(\"data\", (chunk) => {\n        bodyData.push(chunk);\n      }).on(\"end\", () => {\n        resolve(Buffer.concat(bodyData));\n      });\n    }\n  );\n  const result = encoding ? promise.then((buff) => buff.toString(encoding)) : promise;\n  return result;\n}\nasync function readBody(event) {\n  if (ParsedBodySymbol in event.node.req) {\n    return event.node.req[ParsedBodySymbol];\n  }\n  const body = await readRawBody(event, \"utf8\");\n  if (event.node.req.headers[\"content-type\"] === \"application/x-www-form-urlencoded\") {\n    const form = new URLSearchParams(body);\n    const parsedForm = /* @__PURE__ */ Object.create(null);\n    for (const [key, value] of form.entries()) {\n      if (key in parsedForm) {\n        if (!Array.isArray(parsedForm[key])) {\n          parsedForm[key] = [parsedForm[key]];\n        }\n        parsedForm[key].push(value);\n      } else {\n        parsedForm[key] = value;\n      }\n    }\n    return parsedForm;\n  }\n  const json = destr(body);\n  event.node.req[ParsedBodySymbol] = json;\n  return json;\n}\nasync function readMultipartFormData(event) {\n  const contentType = getRequestHeader(event, \"content-type\");\n  if (!contentType || !contentType.startsWith(\"multipart/form-data\")) {\n    return;\n  }\n  const boundary = contentType.match(/boundary=([^;]*)(;|$)/i)?.[1];\n  if (!boundary) {\n    return;\n  }\n  const body = await readRawBody(event, false);\n  if (!body) {\n    return;\n  }\n  return parse(body, boundary);\n}\n\nfunction handleCacheHeaders(event, opts) {\n  const cacheControls = [\"public\", ...opts.cacheControls || []];\n  let cacheMatched = false;\n  if (opts.maxAge !== void 0) {\n    cacheControls.push(`max-age=${+opts.maxAge}`, `s-maxage=${+opts.maxAge}`);\n  }\n  if (opts.modifiedTime) {\n    const modifiedTime = new Date(opts.modifiedTime);\n    const ifModifiedSince = event.node.req.headers[\"if-modified-since\"];\n    event.node.res.setHeader(\"last-modified\", modifiedTime.toUTCString());\n    if (ifModifiedSince && new Date(ifModifiedSince) >= opts.modifiedTime) {\n      cacheMatched = true;\n    }\n  }\n  if (opts.etag) {\n    event.node.res.setHeader(\"etag\", opts.etag);\n    const ifNonMatch = event.node.req.headers[\"if-none-match\"];\n    if (ifNonMatch === opts.etag) {\n      cacheMatched = true;\n    }\n  }\n  event.node.res.setHeader(\"cache-control\", cacheControls.join(\", \"));\n  if (cacheMatched) {\n    event.node.res.statusCode = 304;\n    event.node.res.end();\n    return true;\n  }\n  return false;\n}\n\nconst MIMES = {\n  html: \"text/html\",\n  json: \"application/json\"\n};\n\nfunction parseCookies(event) {\n  return parse$1(event.node.req.headers.cookie || \"\");\n}\nfunction getCookie(event, name) {\n  return parseCookies(event)[name];\n}\nfunction setCookie(event, name, value, serializeOptions) {\n  const cookieStr = serialize(name, value, {\n    path: \"/\",\n    ...serializeOptions\n  });\n  let setCookies = event.node.res.getHeader(\"set-cookie\");\n  if (!Array.isArray(setCookies)) {\n    setCookies = [setCookies];\n  }\n  setCookies = setCookies.filter((cookieValue) => {\n    return cookieValue && !cookieValue.startsWith(name + \"=\");\n  });\n  event.node.res.setHeader(\"set-cookie\", [...setCookies, cookieStr]);\n}\nfunction deleteCookie(event, name, serializeOptions) {\n  setCookie(event, name, \"\", {\n    ...serializeOptions,\n    maxAge: 0\n  });\n}\nfunction splitCookiesString(cookiesString) {\n  if (typeof cookiesString !== \"string\") {\n    return [];\n  }\n  const cookiesStrings = [];\n  let pos = 0;\n  let start;\n  let ch;\n  let lastComma;\n  let nextStart;\n  let cookiesSeparatorFound;\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        lastComma = pos;\n        pos += 1;\n        skipWhitespace();\n        nextStart = pos;\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          cookiesSeparatorFound = true;\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.slice(start, lastComma));\n          start = pos;\n        } else {\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.slice(start, cookiesString.length));\n    }\n  }\n  return cookiesStrings;\n}\n\nconst DISALLOWED_STATUS_CHARS = /[^\\u0009\\u0020-\\u007E]/g;\nfunction sanitizeStatusMessage(statusMessage = \"\") {\n  return statusMessage.replace(DISALLOWED_STATUS_CHARS, \"\");\n}\nfunction sanitizeStatusCode(statusCode, defaultStatusCode = 200) {\n  if (!statusCode) {\n    return defaultStatusCode;\n  }\n  if (typeof statusCode === \"string\") {\n    statusCode = Number.parseInt(statusCode, 10);\n  }\n  if (statusCode < 100 || statusCode > 999) {\n    return defaultStatusCode;\n  }\n  return statusCode;\n}\n\nconst PayloadMethods = /* @__PURE__ */ new Set([\"PATCH\", \"POST\", \"PUT\", \"DELETE\"]);\nconst ignoredHeaders = /* @__PURE__ */ new Set([\n  \"transfer-encoding\",\n  \"connection\",\n  \"keep-alive\",\n  \"upgrade\",\n  \"expect\",\n  \"host\"\n]);\nasync function proxyRequest(event, target, opts = {}) {\n  const method = getMethod(event);\n  let body;\n  if (PayloadMethods.has(method)) {\n    body = await readRawBody(event).catch(() => void 0);\n  }\n  const headers = getProxyRequestHeaders(event);\n  if (opts.fetchOptions?.headers) {\n    Object.assign(headers, opts.fetchOptions.headers);\n  }\n  if (opts.headers) {\n    Object.assign(headers, opts.headers);\n  }\n  return sendProxy(event, target, {\n    ...opts,\n    fetchOptions: {\n      headers,\n      method,\n      body,\n      ...opts.fetchOptions\n    }\n  });\n}\nasync function sendProxy(event, target, opts = {}) {\n  const response = await _getFetch(opts.fetch)(target, {\n    headers: opts.headers,\n    ...opts.fetchOptions\n  });\n  event.node.res.statusCode = sanitizeStatusCode(\n    response.status,\n    event.node.res.statusCode\n  );\n  event.node.res.statusMessage = sanitizeStatusMessage(response.statusText);\n  for (const [key, value] of response.headers.entries()) {\n    if (key === \"content-encoding\") {\n      continue;\n    }\n    if (key === \"content-length\") {\n      continue;\n    }\n    if (key === \"set-cookie\") {\n      const cookies = splitCookiesString(value).map((cookie) => {\n        if (opts.cookieDomainRewrite) {\n          cookie = rewriteCookieProperty(\n            cookie,\n            opts.cookieDomainRewrite,\n            \"domain\"\n          );\n        }\n        if (opts.cookiePathRewrite) {\n          cookie = rewriteCookieProperty(\n            cookie,\n            opts.cookiePathRewrite,\n            \"path\"\n          );\n        }\n        return cookie;\n      });\n      event.node.res.setHeader(\"set-cookie\", cookies);\n      continue;\n    }\n    event.node.res.setHeader(key, value);\n  }\n  if (response._data !== void 0) {\n    return response._data;\n  }\n  if (opts.sendStream === false) {\n    const data = new Uint8Array(await response.arrayBuffer());\n    return event.node.res.end(data);\n  }\n  for await (const chunk of response.body) {\n    event.node.res.write(chunk);\n  }\n  return event.node.res.end();\n}\nfunction getProxyRequestHeaders(event) {\n  const headers = /* @__PURE__ */ Object.create(null);\n  const reqHeaders = getRequestHeaders(event);\n  for (const name in reqHeaders) {\n    if (!ignoredHeaders.has(name)) {\n      headers[name] = reqHeaders[name];\n    }\n  }\n  return headers;\n}\nfunction fetchWithEvent(event, req, init, options) {\n  return _getFetch(options?.fetch)(req, {\n    ...init,\n    context: init?.context || event.context,\n    headers: {\n      ...getProxyRequestHeaders(event),\n      ...init?.headers\n    }\n  });\n}\nfunction _getFetch(_fetch) {\n  if (_fetch) {\n    return _fetch;\n  }\n  if (globalThis.fetch) {\n    return globalThis.fetch;\n  }\n  throw new Error(\n    \"fetch is not available. Try importing `node-fetch-native/polyfill` for Node.js.\"\n  );\n}\nfunction rewriteCookieProperty(header, map, property) {\n  const _map = typeof map === \"string\" ? { \"*\": map } : map;\n  return header.replace(\n    new RegExp(`(;\\\\s*${property}=)([^;]+)`, \"gi\"),\n    (match, prefix, previousValue) => {\n      let newValue;\n      if (previousValue in _map) {\n        newValue = _map[previousValue];\n      } else if (\"*\" in _map) {\n        newValue = _map[\"*\"];\n      } else {\n        return match;\n      }\n      return newValue ? prefix + newValue : \"\";\n    }\n  );\n}\n\nconst defer = typeof setImmediate !== \"undefined\" ? setImmediate : (fn) => fn();\nfunction send(event, data, type) {\n  if (type) {\n    defaultContentType(event, type);\n  }\n  return new Promise((resolve) => {\n    defer(() => {\n      event.node.res.end(data);\n      resolve();\n    });\n  });\n}\nfunction sendNoContent(event, code = 204) {\n  event.node.res.statusCode = sanitizeStatusCode(code, 204);\n  if (event.node.res.statusCode === 204) {\n    event.node.res.removeHeader(\"content-length\");\n  }\n  event.node.res.end();\n}\nfunction setResponseStatus(event, code, text) {\n  if (code) {\n    event.node.res.statusCode = sanitizeStatusCode(\n      code,\n      event.node.res.statusCode\n    );\n  }\n  if (text) {\n    event.node.res.statusMessage = sanitizeStatusMessage(text);\n  }\n}\nfunction getResponseStatus(event) {\n  return event.node.res.statusCode;\n}\nfunction getResponseStatusText(event) {\n  return event.node.res.statusMessage;\n}\nfunction defaultContentType(event, type) {\n  if (type && !event.node.res.getHeader(\"content-type\")) {\n    event.node.res.setHeader(\"content-type\", type);\n  }\n}\nfunction sendRedirect(event, location, code = 302) {\n  event.node.res.statusCode = sanitizeStatusCode(\n    code,\n    event.node.res.statusCode\n  );\n  event.node.res.setHeader(\"location\", location);\n  const encodedLoc = location.replace(/\"/g, \"%22\");\n  const html = `<!DOCTYPE html><html><head><meta http-equiv=\"refresh\" content=\"0; url=${encodedLoc}\"></head></html>`;\n  return send(event, html, MIMES.html);\n}\nfunction getResponseHeaders(event) {\n  return event.node.res.getHeaders();\n}\nfunction getResponseHeader(event, name) {\n  return event.node.res.getHeader(name);\n}\nfunction setResponseHeaders(event, headers) {\n  for (const [name, value] of Object.entries(headers)) {\n    event.node.res.setHeader(name, value);\n  }\n}\nconst setHeaders = setResponseHeaders;\nfunction setResponseHeader(event, name, value) {\n  event.node.res.setHeader(name, value);\n}\nconst setHeader = setResponseHeader;\nfunction appendResponseHeaders(event, headers) {\n  for (const [name, value] of Object.entries(headers)) {\n    appendResponseHeader(event, name, value);\n  }\n}\nconst appendHeaders = appendResponseHeaders;\nfunction appendResponseHeader(event, name, value) {\n  let current = event.node.res.getHeader(name);\n  if (!current) {\n    event.node.res.setHeader(name, value);\n    return;\n  }\n  if (!Array.isArray(current)) {\n    current = [current.toString()];\n  }\n  event.node.res.setHeader(name, [...current, value]);\n}\nconst appendHeader = appendResponseHeader;\nfunction isStream(data) {\n  return data && typeof data === \"object\" && typeof data.pipe === \"function\" && typeof data.on === \"function\";\n}\nfunction sendStream(event, data) {\n  return new Promise((resolve, reject) => {\n    data.pipe(event.node.res);\n    data.on(\"end\", () => resolve());\n    data.on(\"error\", (error) => reject(createError(error)));\n  });\n}\nconst noop = () => {\n};\nfunction writeEarlyHints(event, hints, cb = noop) {\n  if (!event.node.res.socket) {\n    cb();\n    return;\n  }\n  if (typeof hints === \"string\" || Array.isArray(hints)) {\n    hints = { link: hints };\n  }\n  if (hints.link) {\n    hints.link = Array.isArray(hints.link) ? hints.link : hints.link.split(\",\");\n  }\n  const headers = Object.entries(hints).map(\n    (e) => [e[0].toLowerCase(), e[1]]\n  );\n  if (headers.length === 0) {\n    cb();\n    return;\n  }\n  let hint = \"HTTP/1.1 103 Early Hints\";\n  if (hints.link) {\n    hint += `\\r\nLink: ${hints.link.join(\", \")}`;\n  }\n  for (const [header, value] of headers) {\n    if (header === \"link\") {\n      continue;\n    }\n    hint += `\\r\n${header}: ${value}`;\n  }\n  if (event.node.res.socket) {\n    event.node.res.socket.write(\n      `${hint}\\r\n\\r\n`,\n      \"utf8\",\n      cb\n    );\n  } else {\n    cb();\n  }\n}\n\nconst DEFAULT_NAME = \"h3\";\nconst DEFAULT_COOKIE = {\n  path: \"/\",\n  secure: true,\n  httpOnly: true\n};\nasync function useSession(event, config) {\n  const sessionName = config.name || DEFAULT_NAME;\n  await getSession(event, config);\n  const sessionManager = {\n    get id() {\n      return event.context.sessions?.[sessionName]?.id;\n    },\n    get data() {\n      return event.context.sessions?.[sessionName]?.data || {};\n    },\n    update: async (update) => {\n      await updateSession(event, config, update);\n      return sessionManager;\n    },\n    clear: async () => {\n      await clearSession(event, config);\n      return sessionManager;\n    }\n  };\n  return sessionManager;\n}\nasync function getSession(event, config) {\n  const sessionName = config.name || DEFAULT_NAME;\n  if (!event.context.sessions) {\n    event.context.sessions = /* @__PURE__ */ Object.create(null);\n  }\n  if (event.context.sessions[sessionName]) {\n    return event.context.sessions[sessionName];\n  }\n  const session = {\n    id: \"\",\n    createdAt: 0,\n    data: /* @__PURE__ */ Object.create(null)\n  };\n  event.context.sessions[sessionName] = session;\n  let sealedSession;\n  if (config.sessionHeader !== false) {\n    const headerName = typeof config.sessionHeader === \"string\" ? config.sessionHeader.toLowerCase() : `x-${sessionName.toLowerCase()}-session`;\n    const headerValue = event.node.req.headers[headerName];\n    if (typeof headerValue === \"string\") {\n      sealedSession = headerValue;\n    }\n  }\n  if (!sealedSession) {\n    sealedSession = getCookie(event, sessionName);\n  }\n  if (sealedSession) {\n    const unsealed = await unsealSession(event, config, sealedSession).catch(\n      () => {\n      }\n    );\n    Object.assign(session, unsealed);\n  }\n  if (!session.id) {\n    session.id = (config.crypto || crypto).randomUUID();\n    session.createdAt = Date.now();\n    await updateSession(event, config);\n  }\n  return session;\n}\nasync function updateSession(event, config, update) {\n  const sessionName = config.name || DEFAULT_NAME;\n  const session = event.context.sessions?.[sessionName] || await getSession(event, config);\n  if (typeof update === \"function\") {\n    update = update(session.data);\n  }\n  if (update) {\n    Object.assign(session.data, update);\n  }\n  if (config.cookie !== false) {\n    const sealed = await sealSession(event, config);\n    setCookie(event, sessionName, sealed, {\n      ...DEFAULT_COOKIE,\n      expires: config.maxAge ? new Date(session.createdAt + config.maxAge * 1e3) : void 0,\n      ...config.cookie\n    });\n  }\n  return session;\n}\nasync function sealSession(event, config) {\n  const sessionName = config.name || DEFAULT_NAME;\n  const session = event.context.sessions?.[sessionName] || await getSession(event, config);\n  const sealed = await seal(config.crypto || crypto, session, config.password, {\n    ...defaults,\n    ttl: config.maxAge ? config.maxAge * 1e3 : 0,\n    ...config.seal\n  });\n  return sealed;\n}\nasync function unsealSession(_event, config, sealed) {\n  const unsealed = await unseal(\n    config.crypto || crypto,\n    sealed,\n    config.password,\n    {\n      ...defaults,\n      ttl: config.maxAge ? config.maxAge * 1e3 : 0,\n      ...config.seal\n    }\n  );\n  if (config.maxAge) {\n    const age = Date.now() - (unsealed.createdAt || Number.NEGATIVE_INFINITY);\n    if (age > config.maxAge * 1e3) {\n      throw new Error(\"Session expired!\");\n    }\n  }\n  return unsealed;\n}\nasync function clearSession(event, config) {\n  const sessionName = config.name || DEFAULT_NAME;\n  if (event.context.sessions?.[sessionName]) {\n    delete event.context.sessions[sessionName];\n  }\n  await setCookie(event, sessionName, \"\", {\n    ...DEFAULT_COOKIE,\n    ...config.cookie\n  });\n}\n\nfunction resolveCorsOptions(options = {}) {\n  const defaultOptions = {\n    origin: \"*\",\n    methods: \"*\",\n    allowHeaders: \"*\",\n    exposeHeaders: \"*\",\n    credentials: false,\n    maxAge: false,\n    preflight: {\n      statusCode: 204\n    }\n  };\n  return defu(options, defaultOptions);\n}\nfunction isPreflightRequest(event) {\n  const method = getMethod(event);\n  const origin = getRequestHeader(event, \"origin\");\n  const accessControlRequestMethod = getRequestHeader(\n    event,\n    \"access-control-request-method\"\n  );\n  return method === \"OPTIONS\" && !!origin && !!accessControlRequestMethod;\n}\nfunction isCorsOriginAllowed(origin, options) {\n  const { origin: originOption } = options;\n  if (!origin || !originOption || originOption === \"*\" || originOption === \"null\") {\n    return true;\n  }\n  if (Array.isArray(originOption)) {\n    return originOption.some((_origin) => {\n      if (_origin instanceof RegExp) {\n        return _origin.test(origin);\n      }\n      return origin === _origin;\n    });\n  }\n  return originOption(origin);\n}\nfunction createOriginHeaders(event, options) {\n  const { origin: originOption } = options;\n  const origin = getRequestHeader(event, \"origin\");\n  if (!origin || !originOption || originOption === \"*\") {\n    return { \"access-control-allow-origin\": \"*\" };\n  }\n  if (typeof originOption === \"string\") {\n    return { \"access-control-allow-origin\": originOption, vary: \"origin\" };\n  }\n  return isCorsOriginAllowed(origin, options) ? { \"access-control-allow-origin\": origin, vary: \"origin\" } : {};\n}\nfunction createMethodsHeaders(options) {\n  const { methods } = options;\n  if (!methods) {\n    return {};\n  }\n  if (methods === \"*\") {\n    return { \"access-control-allow-methods\": \"*\" };\n  }\n  return methods.length > 0 ? { \"access-control-allow-methods\": methods.join(\",\") } : {};\n}\nfunction createCredentialsHeaders(options) {\n  const { credentials } = options;\n  if (credentials) {\n    return { \"access-control-allow-credentials\": \"true\" };\n  }\n  return {};\n}\nfunction createAllowHeaderHeaders(event, options) {\n  const { allowHeaders } = options;\n  if (!allowHeaders || allowHeaders === \"*\" || allowHeaders.length === 0) {\n    const header = getRequestHeader(event, \"access-control-request-headers\");\n    return header ? {\n      \"access-control-allow-headers\": header,\n      vary: \"access-control-request-headers\"\n    } : {};\n  }\n  return {\n    \"access-control-allow-headers\": allowHeaders.join(\",\"),\n    vary: \"access-control-request-headers\"\n  };\n}\nfunction createExposeHeaders(options) {\n  const { exposeHeaders } = options;\n  if (!exposeHeaders) {\n    return {};\n  }\n  if (exposeHeaders === \"*\") {\n    return { \"access-control-expose-headers\": exposeHeaders };\n  }\n  return { \"access-control-expose-headers\": exposeHeaders.join(\",\") };\n}\nfunction appendCorsPreflightHeaders(event, options) {\n  appendHeaders(event, createOriginHeaders(event, options));\n  appendHeaders(event, createCredentialsHeaders(options));\n  appendHeaders(event, createExposeHeaders(options));\n  appendHeaders(event, createMethodsHeaders(options));\n  appendHeaders(event, createAllowHeaderHeaders(event, options));\n}\nfunction appendCorsHeaders(event, options) {\n  appendHeaders(event, createOriginHeaders(event, options));\n  appendHeaders(event, createCredentialsHeaders(options));\n  appendHeaders(event, createExposeHeaders(options));\n}\n\nfunction handleCors(event, options) {\n  const _options = resolveCorsOptions(options);\n  if (isPreflightRequest(event)) {\n    appendCorsPreflightHeaders(event, options);\n    sendNoContent(event, _options.preflight.statusCode);\n    return true;\n  }\n  appendCorsHeaders(event, options);\n  return false;\n}\n\nclass H3Headers {\n  constructor(init) {\n    if (!init) {\n      this._headers = {};\n    } else if (Array.isArray(init)) {\n      this._headers = Object.fromEntries(\n        init.map(([key, value]) => [key.toLowerCase(), value])\n      );\n    } else if (init && \"append\" in init) {\n      this._headers = Object.fromEntries(init.entries());\n    } else {\n      this._headers = Object.fromEntries(\n        Object.entries(init).map(([key, value]) => [key.toLowerCase(), value])\n      );\n    }\n  }\n  [Symbol.iterator]() {\n    return this.entries();\n  }\n  entries() {\n    throw Object.entries(this._headers)[Symbol.iterator]();\n  }\n  keys() {\n    return Object.keys(this._headers)[Symbol.iterator]();\n  }\n  values() {\n    throw Object.values(this._headers)[Symbol.iterator]();\n  }\n  append(name, value) {\n    const _name = name.toLowerCase();\n    this.set(_name, [this.get(_name), value].filter(Boolean).join(\", \"));\n  }\n  delete(name) {\n    delete this._headers[name.toLowerCase()];\n  }\n  get(name) {\n    return this._headers[name.toLowerCase()];\n  }\n  has(name) {\n    return name.toLowerCase() in this._headers;\n  }\n  set(name, value) {\n    this._headers[name.toLowerCase()] = String(value);\n  }\n  forEach(callbackfn) {\n    for (const [key, value] of Object.entries(this._headers)) {\n      callbackfn(value, key, this);\n    }\n  }\n}\n\nclass H3Response {\n  constructor(body = null, init = {}) {\n    // TODO: yet to implement\n    this.body = null;\n    this.type = \"default\";\n    this.bodyUsed = false;\n    this.headers = new H3Headers(init.headers);\n    this.status = init.status ?? 200;\n    this.statusText = init.statusText || \"\";\n    this.redirected = !!init.status && [301, 302, 307, 308].includes(init.status);\n    this._body = body;\n    this.url = \"\";\n    this.ok = this.status < 300 && this.status > 199;\n  }\n  clone() {\n    return new H3Response(this.body, {\n      headers: this.headers,\n      status: this.status,\n      statusText: this.statusText\n    });\n  }\n  arrayBuffer() {\n    return Promise.resolve(this._body);\n  }\n  blob() {\n    return Promise.resolve(this._body);\n  }\n  formData() {\n    return Promise.resolve(this._body);\n  }\n  json() {\n    return Promise.resolve(this._body);\n  }\n  text() {\n    return Promise.resolve(this._body);\n  }\n}\n\nclass H3Event {\n  constructor(req, res) {\n    this[\"__is_event__\"] = true;\n    this.context = {};\n    this.node = { req, res };\n  }\n  get path() {\n    return getRequestPath(this);\n  }\n  /** @deprecated Please use `event.node.req` instead. **/\n  get req() {\n    return this.node.req;\n  }\n  /** @deprecated Please use `event.node.res` instead. **/\n  get res() {\n    return this.node.res;\n  }\n  // Implementation of FetchEvent\n  respondWith(r) {\n    Promise.resolve(r).then((_response) => {\n      if (this.res.writableEnded) {\n        return;\n      }\n      const response = _response instanceof H3Response ? _response : new H3Response(_response);\n      for (const [key, value] of response.headers.entries()) {\n        this.res.setHeader(key, value);\n      }\n      if (response.status) {\n        this.res.statusCode = sanitizeStatusCode(\n          response.status,\n          this.res.statusCode\n        );\n      }\n      if (response.statusText) {\n        this.res.statusMessage = sanitizeStatusMessage(response.statusText);\n      }\n      if (response.redirected) {\n        this.res.setHeader(\"location\", response.url);\n      }\n      if (!response._body) {\n        return this.res.end();\n      }\n      if (typeof response._body === \"string\" || \"buffer\" in response._body || \"byteLength\" in response._body) {\n        return this.res.end(response._body);\n      }\n      if (!response.headers.has(\"content-type\")) {\n        response.headers.set(\"content-type\", MIMES.json);\n      }\n      this.res.end(JSON.stringify(response._body));\n    });\n  }\n}\nfunction isEvent(input) {\n  return \"__is_event__\" in input;\n}\nfunction createEvent(req, res) {\n  return new H3Event(req, res);\n}\n\nfunction defineEventHandler(handler) {\n  handler.__is_handler__ = true;\n  return handler;\n}\nconst eventHandler = defineEventHandler;\nfunction isEventHandler(input) {\n  return \"__is_handler__\" in input;\n}\nfunction toEventHandler(input, _, _route) {\n  if (!isEventHandler(input)) {\n    console.warn(\n      \"[h3] Implicit event handler conversion is deprecated. Use `eventHandler()` or `fromNodeMiddleware()` to define event handlers.\",\n      _route && _route !== \"/\" ? `\n     Route: ${_route}` : \"\",\n      `\n     Handler: ${input}`\n    );\n  }\n  return input;\n}\nfunction dynamicEventHandler(initial) {\n  let current = initial;\n  const wrapper = eventHandler((event) => {\n    if (current) {\n      return current(event);\n    }\n  });\n  wrapper.set = (handler) => {\n    current = handler;\n  };\n  return wrapper;\n}\nfunction defineLazyEventHandler(factory) {\n  let _promise;\n  let _resolved;\n  const resolveHandler = () => {\n    if (_resolved) {\n      return Promise.resolve(_resolved);\n    }\n    if (!_promise) {\n      _promise = Promise.resolve(factory()).then((r) => {\n        const handler = r.default || r;\n        if (typeof handler !== \"function\") {\n          throw new TypeError(\n            \"Invalid lazy handler result. It should be a function:\",\n            handler\n          );\n        }\n        _resolved = toEventHandler(r.default || r);\n        return _resolved;\n      });\n    }\n    return _promise;\n  };\n  return eventHandler((event) => {\n    if (_resolved) {\n      return _resolved(event);\n    }\n    return resolveHandler().then((handler) => handler(event));\n  });\n}\nconst lazyEventHandler = defineLazyEventHandler;\n\nfunction createApp(options = {}) {\n  const stack = [];\n  const handler = createAppEventHandler(stack, options);\n  const app = {\n    // @ts-ignore\n    use: (arg1, arg2, arg3) => use(app, arg1, arg2, arg3),\n    handler,\n    stack,\n    options\n  };\n  return app;\n}\nfunction use(app, arg1, arg2, arg3) {\n  if (Array.isArray(arg1)) {\n    for (const i of arg1) {\n      use(app, i, arg2, arg3);\n    }\n  } else if (Array.isArray(arg2)) {\n    for (const i of arg2) {\n      use(app, arg1, i, arg3);\n    }\n  } else if (typeof arg1 === \"string\") {\n    app.stack.push(\n      normalizeLayer({ ...arg3, route: arg1, handler: arg2 })\n    );\n  } else if (typeof arg1 === \"function\") {\n    app.stack.push(\n      normalizeLayer({ ...arg2, route: \"/\", handler: arg1 })\n    );\n  } else {\n    app.stack.push(normalizeLayer({ ...arg1 }));\n  }\n  return app;\n}\nfunction createAppEventHandler(stack, options) {\n  const spacing = options.debug ? 2 : void 0;\n  return eventHandler(async (event) => {\n    event.node.req.originalUrl = event.node.req.originalUrl || event.node.req.url || \"/\";\n    const reqUrl = event.node.req.url || \"/\";\n    for (const layer of stack) {\n      if (layer.route.length > 1) {\n        if (!reqUrl.startsWith(layer.route)) {\n          continue;\n        }\n        event.node.req.url = reqUrl.slice(layer.route.length) || \"/\";\n      } else {\n        event.node.req.url = reqUrl;\n      }\n      if (layer.match && !layer.match(event.node.req.url, event)) {\n        continue;\n      }\n      const val = await layer.handler(event);\n      if (event.node.res.writableEnded) {\n        return;\n      }\n      const type = typeof val;\n      if (type === \"string\") {\n        return send(event, val, MIMES.html);\n      } else if (isStream(val)) {\n        return sendStream(event, val);\n      } else if (val === null) {\n        event.node.res.statusCode = 204;\n        return send(event);\n      } else if (type === \"object\" || type === \"boolean\" || type === \"number\") {\n        if (val.buffer) {\n          return send(event, val);\n        } else if (val instanceof Error) {\n          throw createError(val);\n        } else {\n          return send(\n            event,\n            JSON.stringify(val, void 0, spacing),\n            MIMES.json\n          );\n        }\n      }\n    }\n    if (!event.node.res.writableEnded) {\n      throw createError({\n        statusCode: 404,\n        statusMessage: `Cannot find any route matching ${event.node.req.url || \"/\"}.`\n      });\n    }\n  });\n}\nfunction normalizeLayer(input) {\n  let handler = input.handler;\n  if (handler.handler) {\n    handler = handler.handler;\n  }\n  if (input.lazy) {\n    handler = lazyEventHandler(handler);\n  } else if (!isEventHandler(handler)) {\n    handler = toEventHandler(handler, void 0, input.route);\n  }\n  return {\n    route: withoutTrailingSlash(input.route),\n    match: input.match,\n    handler\n  };\n}\n\nconst defineNodeListener = (handler) => handler;\nconst defineNodeMiddleware = (middleware) => middleware;\nfunction fromNodeMiddleware(handler) {\n  if (isEventHandler(handler)) {\n    return handler;\n  }\n  if (typeof handler !== \"function\") {\n    throw new TypeError(\n      \"Invalid handler. It should be a function:\",\n      handler\n    );\n  }\n  return eventHandler((event) => {\n    return callNodeListener(\n      handler,\n      event.node.req,\n      event.node.res\n    );\n  });\n}\nfunction toNodeListener(app) {\n  const toNodeHandle = async function(req, res) {\n    const event = createEvent(req, res);\n    try {\n      await app.handler(event);\n    } catch (_error) {\n      const error = createError(_error);\n      if (!isError(_error)) {\n        error.unhandled = true;\n      }\n      if (app.options.onError) {\n        await app.options.onError(error, event);\n      } else {\n        if (error.unhandled || error.fatal) {\n          console.error(\"[h3]\", error.fatal ? \"[fatal]\" : \"[unhandled]\", error);\n        }\n        await sendError(event, error, !!app.options.debug);\n      }\n    }\n  };\n  return toNodeHandle;\n}\nfunction promisifyNodeListener(handler) {\n  return function(req, res) {\n    return callNodeListener(handler, req, res);\n  };\n}\nfunction callNodeListener(handler, req, res) {\n  const isMiddleware = handler.length > 2;\n  return new Promise((resolve, reject) => {\n    const next = (err) => {\n      if (isMiddleware) {\n        res.off(\"close\", next);\n        res.off(\"error\", next);\n      }\n      return err ? reject(createError(err)) : resolve(void 0);\n    };\n    try {\n      const returned = handler(req, res, next);\n      if (isMiddleware && returned === void 0) {\n        res.once(\"close\", next);\n        res.once(\"error\", next);\n      } else {\n        resolve(returned);\n      }\n    } catch (error) {\n      next(error);\n    }\n  });\n}\n\nconst RouterMethods = [\n  \"connect\",\n  \"delete\",\n  \"get\",\n  \"head\",\n  \"options\",\n  \"post\",\n  \"put\",\n  \"trace\",\n  \"patch\"\n];\nfunction createRouter(opts = {}) {\n  const _router = createRouter$1({});\n  const routes = {};\n  const router = {};\n  const addRoute = (path, handler, method) => {\n    let route = routes[path];\n    if (!route) {\n      routes[path] = route = { handlers: {} };\n      _router.insert(path, route);\n    }\n    if (Array.isArray(method)) {\n      for (const m of method) {\n        addRoute(path, handler, m);\n      }\n    } else {\n      route.handlers[method] = toEventHandler(handler, void 0, path);\n    }\n    return router;\n  };\n  router.use = router.add = (path, handler, method) => addRoute(path, handler, method || \"all\");\n  for (const method of RouterMethods) {\n    router[method] = (path, handle) => router.add(path, handle, method);\n  }\n  router.handler = eventHandler((event) => {\n    let path = event.node.req.url || \"/\";\n    const qIndex = path.indexOf(\"?\");\n    if (qIndex !== -1) {\n      path = path.slice(0, Math.max(0, qIndex));\n    }\n    const matched = _router.lookup(path);\n    if (!matched || !matched.handlers) {\n      if (opts.preemptive || opts.preemtive) {\n        throw createError({\n          statusCode: 404,\n          name: \"Not Found\",\n          statusMessage: `Cannot find any route matching ${event.node.req.url || \"/\"}.`\n        });\n      } else {\n        return;\n      }\n    }\n    const method = (event.node.req.method || \"get\").toLowerCase();\n    const handler = matched.handlers[method] || matched.handlers.all;\n    if (!handler) {\n      throw createError({\n        statusCode: 405,\n        name: \"Method Not Allowed\",\n        statusMessage: `Method ${method} is not allowed on this route.`\n      });\n    }\n    const params = matched.params || {};\n    event.context.params = params;\n    return handler(event);\n  });\n  return router;\n}\n\nexport { H3Error, H3Event, H3Headers, H3Response, MIMES, appendCorsHeaders, appendCorsPreflightHeaders, appendHeader, appendHeaders, appendResponseHeader, appendResponseHeaders, assertMethod, callNodeListener, clearSession, createApp, createAppEventHandler, createError, createEvent, createRouter, defaultContentType, defineEventHandler, defineLazyEventHandler, defineNodeListener, defineNodeMiddleware, deleteCookie, dynamicEventHandler, eventHandler, fetchWithEvent, fromNodeMiddleware, getCookie, getHeader, getHeaders, getMethod, getProxyRequestHeaders, getQuery, getRequestHeader, getRequestHeaders, getRequestHost, getRequestPath, getRequestProtocol, getRequestURL, getResponseHeader, getResponseHeaders, getResponseStatus, getResponseStatusText, getRouterParam, getRouterParams, getSession, handleCacheHeaders, handleCors, isCorsOriginAllowed, isError, isEvent, isEventHandler, isMethod, isPreflightRequest, isStream, lazyEventHandler, parseCookies, promisifyNodeListener, proxyRequest, readBody, readMultipartFormData, readRawBody, sanitizeStatusCode, sanitizeStatusMessage, sealSession, send, sendError, sendNoContent, sendProxy, sendRedirect, sendStream, setCookie, setHeader, setHeaders, setResponseHeader, setResponseHeaders, setResponseStatus, splitCookiesString, toEventHandler, toNodeListener, unsealSession, updateSession, use, useBase, useSession, writeEarlyHints };\n"],
  "mappings": "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",
  "names": ["decode", "decode2", "_crypto", "defaults", "parse", "getQuery", "r", "createRouter"]
}
