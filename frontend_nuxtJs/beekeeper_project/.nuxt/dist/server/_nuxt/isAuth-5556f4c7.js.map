{"version":3,"file":"isAuth-5556f4c7.js","sources":["../../../../middleware/isAuth.js"],"sourcesContent":["import verifAssessToken from \"../additional_func/verifAssessToken\"\n\nimport { useMainStore } from \"../store\";\nexport default async (event) => {\n  /* Попытка авторизовать пользователя на всех переходах  */\n  const stores = useMainStore()\n    if (useCookie('assess').value || useCookie('refresh').value){\n      // проверка токена\n      stores.assess_token = useCookie('assess')\n      let assess_response = await verifAssessToken(stores.assess_token)\n      if (!(assess_response.status == 200)){\n      // если нет\n          if (useCookie('refresh')){\n              console.log('Есть рефреш')\n              return // установить новый токен\n          }else{\n            if (event.href != '/login' && event.href != '/register'){\n              return navigateTo('/login')\n            }\n          }\n      }else{\n        stores.userSet(assess_response.data)\n      }\n  }else{\n\n    let assess_response = await verifAssessToken()\n    console.log(assess_response.status)\n      if (!(assess_response.status == 200)){\n      // если нет\n            if (event.href != '/login' && event.href != '/register'){\n              return navigateTo('/login')\n            }\n      }else{\n        stores.userSet(assess_response.data)\n      }\n  }\n}\n\n\n  // import verifAssessToken from \"../additional_func/verifAssessToken\"\n\n  // export default async (event) => {\n  //       let assess_response = await verifAssessToken()\n  //       if (!(assess_response.status == 200)){\n  //       // если нет\n  //           if (useCookie('refresh')){\n  //               console.log('Есть рефреш')\n  //               return\n  //               // проверка рефреша \n  //               // если верен то вернуть страницу\n  //               // если не верен то перейти на логин\n  //           }else{\n  //               console.log('Нет рефреша')\n  //               if (event.req.url != '/login'){\n          \n  //                 return sendRedirect(event, '/login', 302)\n  //               }else{\n  //                 event.context.$assess_token = '123'\n  //               }\n    \n  //           }\n  //       }\n        \n        \n        \n  //       // if запрос верен, document.cookie = \"token=\" + token\n  //       // else проверка на refresh, если он верен то запись токена\n  //       // else return next('/login')\n    \n  //   }"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAGA,MAAe,SAAA,OAAO,UAAU;AAE9B,QAAM,SAAS,aAAc;AAC3B,MAAI,UAAU,QAAQ,EAAE,SAAS,UAAU,SAAS,EAAE,OAAM;AAE1D,WAAO,eAAe,UAAU,QAAQ;AACxC,QAAI,kBAAkB,MAAM,iBAAiB,OAAO,YAAY;AAChE,QAAI,EAAE,gBAAgB,UAAU,MAAK;AAEjC,UAAI,UAAU,SAAS,GAAE;AACrB,gBAAQ,IAAI,aAAa;AACzB;AAAA,MACd,OAAe;AACH,YAAI,MAAM,QAAQ,YAAY,MAAM,QAAQ,aAAY;AACtD,iBAAO,WAAW,QAAQ;AAAA,QAC3B;AAAA,MACF;AAAA,IACX,OAAW;AACH,aAAO,QAAQ,gBAAgB,IAAI;AAAA,IACpC;AAAA,EACP,OAAO;AAEH,QAAI,kBAAkB,MAAM,iBAAkB;AAC9C,YAAQ,IAAI,gBAAgB,MAAM;AAChC,QAAI,EAAE,gBAAgB,UAAU,MAAK;AAE/B,UAAI,MAAM,QAAQ,YAAY,MAAM,QAAQ,aAAY;AACtD,eAAO,WAAW,QAAQ;AAAA,MAC3B;AAAA,IACb,OAAW;AACH,aAAO,QAAQ,gBAAgB,IAAI;AAAA,IACpC;AAAA,EACJ;AACH;"}