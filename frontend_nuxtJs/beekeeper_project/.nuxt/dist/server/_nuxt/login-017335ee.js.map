{"version":3,"file":"login-017335ee.js","sources":["../../../../additional_func/login.js","../../../../additional_func/User/set_token.js","../../../../pages/login.vue"],"sourcesContent":["import axios from \"axios\";\r\nimport { api_root } from '@/main'\r\n\r\n\r\nexport default async function login(data){\r\n    try {\r\n        var response = await axios({url: `${api_root}api/token/`,\r\n        method: \"post\",\r\n        data: data,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        withCredentials: true\r\n      })\r\n      return response\r\n      } catch (error) {\r\n        return error.response\r\n      }\r\n    }","import axios from \"axios\";\nimport { api_root } from '@/main'\n\n\nexport default async function set_token(data){\n    try {\n        var response = await axios({url: `${api_root}api/v0.1/user/set_token`,\n        method: \"post\",\n        data: data,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        withCredentials: true\n      })\n      return response\n      } catch (error) {\n        return error.response\n      }\n    }","<template>\r\n  <div id=\"login_main\">\r\n    <div class=\"sot-ob\">\r\n      <div class=\"wrapper flex\">\r\n        <div class=\"login-page flex\">\r\n          <AuthImageForm></AuthImageForm>\r\n          <div class=\"form\">\r\n            <p class=\"small login-p\">Войти в аккаунт  </p>\r\n\r\n            <div class=\"flex h_sto\">\r\n              <div class=\"login-form auto\">\r\n                <div class=\"error_list\">\r\n                  <div v-if=\"login_401\">\r\n                    Нету учетной записи с введенными данными\r\n                  </div>\r\n                  <div v-if=\"message\">\r\n                    {{ message }}\r\n                  </div>\r\n                </div>\r\n                <input v-if=\"!is_code\" type=\"text\" placeholder=\"username\" v-model=\"username\" />\r\n                <input v-if=\"!is_code\"\r\n                  type=\"password\"\r\n                  placeholder=\"password\"\r\n                  v-model=\"password\"\r\n                />\r\n                <div v-else >\r\n                  <p>Укажите отправленный вам код</p>\r\n                <input type=\"text\" placeholder=\"code\" v-model=\"code\" />\r\n                </div>\r\n                <button @click=\"login_request($event)\">login</button>\r\n                <p class=\"message\">\r\n                  Not registered? <a href=\"#\">Create an account</a>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<style lang=\"scss\" src=\"../assets/css/login.scss\" scoped></style>\r\n<script>\r\nimport login from \"@/additional_func/login\";\r\nimport { useHead } from \"nuxt/app\";\r\nimport set_token from \"~/additional_func/User/set_token\";\r\nexport default {\r\n  el: \"#login_main\",\r\n  data() {\r\n    return {\r\n      username: \"\",\r\n      password: \"\",\r\n      login_401: false,\r\n      message: null,\r\n      is_code: false,\r\n      code: ''\r\n    };\r\n  },\r\n  methods: {\r\n\r\n    async login_request(event) {\r\n      if (this.is_code){\r\n        let obj = {\r\n        username: this.username,\r\n        password: this.password,\r\n        token: this.code\r\n      };\r\n      let response = await login(obj);\r\n      this.default_check_status_login(response)\r\n      }\r\n      else{\r\n        let obj = {\r\n        username: this.username,\r\n        password: this.password,\r\n      };\r\n        let response = await login(obj);\r\n      if (response?.status == 400 && response?.data?.error == \"Не указано поле token\"){\r\n              await set_token({\r\n              'username':this.username,\r\n              'password':this.password,\r\n            })\r\n            this.is_code = true\r\n\r\n      }else{\r\n\r\n        this.default_check_status_login(response)\r\n      }\r\n      }\r\n      \r\n    },\r\n    async default_check_status_login(response){\r\n\r\n      if (response.status == 200) {\r\n        await this.$router.push('/profile')\r\n      } else if (response.status == 401) {\r\n        this.login_401 = true;\r\n      } else if (response == 404) {\r\n        alert(\"сайт на проверке, подождите 5 минут\");\r\n      }\r\n    }\r\n    \r\n  },\r\n  mounted(){\r\n    this.message = this.$route.query.message\r\n  },\r\n    setup() {\r\n      useHead({\r\n    title: 'Пчелиная артель - Вход',\r\n    meta: [\r\n      { name: 'description', content: 'My amazing site.' }\r\n    ],\r\n      })\r\n    }\r\n};\r\n</script>\r\n"],"names":["login","_ssrRenderAttrs","_mergeProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAIe,eAAeA,QAAM,MAAK;AACrC,MAAI;AACA,QAAI,WAAW,MAAM,MAAM;AAAA,MAAC,KAAK,GAAG;AAAA,MACpC,QAAQ;AAAA,MACR;AAAA,MACA,SAAS;AAAA,QACP,gBAAgB;AAAA,MACjB;AAAA,MACD,iBAAiB;AAAA,IACzB,CAAO;AACD,WAAO;AAAA,EACN,SAAQ,OAAP;AACA,WAAO,MAAM;AAAA,EACd;AACP;ACde,eAAe,UAAU,MAAK;AACzC,MAAI;AACA,QAAI,WAAW,MAAM,MAAM;AAAA,MAAC,KAAK,GAAG;AAAA,MACpC,QAAQ;AAAA,MACR;AAAA,MACA,SAAS;AAAA,QACP,gBAAgB;AAAA,MACjB;AAAA,MACD,iBAAiB;AAAA,IACzB,CAAO;AACD,WAAO;AAAA,EACN,SAAQ,OAAP;AACA,WAAO,MAAM;AAAA,EACd;AACP;;AC4BA,MAAK,YAAU;AAAA,EACb,IAAI;AAAA,EACJ,OAAO;AACL,WAAO;AAAA,MACL,UAAU;AAAA,MACV,UAAU;AAAA,MACV,WAAW;AAAA,MACX,SAAS;AAAA,MACT,SAAS;AAAA,MACT,MAAM;AAAA;EAET;AAAA,EACD,SAAS;AAAA,IAEP,MAAM,cAAc,OAAO;;AACzB,UAAI,KAAK,SAAQ;AACf,YAAI,MAAM;AAAA,UACV,UAAU,KAAK;AAAA,UACf,UAAU,KAAK;AAAA,UACf,OAAO,KAAK;AAAA;AAEd,YAAI,WAAW,MAAMA,QAAM,GAAG;AAC9B,aAAK,2BAA2B,QAAQ;AAAA,MACxC,OACI;AACF,YAAI,MAAM;AAAA,UACV,UAAU,KAAK;AAAA,UACf,UAAU,KAAK;AAAA;AAEf,YAAI,WAAW,MAAMA,QAAM,GAAG;AAChC,aAAI,qCAAU,WAAU,SAAO,0CAAU,SAAV,mBAAgB,UAAS,yBAAwB;AACxE,gBAAM,UAAU;AAAA,YAChB,YAAW,KAAK;AAAA,YAChB,YAAW,KAAK;AAAA,WACjB;AACD,eAAK,UAAU;AAAA,eAEhB;AAEH,eAAK,2BAA2B,QAAQ;AAAA,QAC1C;AAAA,MACA;AAAA,IAED;AAAA,IACD,MAAM,2BAA2B,UAAS;AAExC,UAAI,SAAS,UAAU,KAAK;AAC1B,cAAM,KAAK,QAAQ,KAAK,UAAU;AAAA,iBACzB,SAAS,UAAU,KAAK;AACjC,aAAK,YAAY;AAAA,iBACR,YAAY,KAAK;AAC1B,cAAM,qCAAqC;AAAA,MAC7C;AAAA,IACF;AAAA,EAED;AAAA,EACD,UAAS;AACP,SAAK,UAAU,KAAK,OAAO,MAAM;AAAA,EAClC;AAAA,EACC,QAAQ;AACN,YAAQ;AAAA,MACV,OAAO;AAAA,MACP,MAAM;AAAA,QACJ,EAAE,MAAM,eAAe,SAAS,mBAAmB;AAAA,MACpD;AAAA,KACE;AAAA,EACH;AACJ;;;AAhHO,QAAA,OAAAC,eAAAC,WAAA,EAAA,IAAG,gBAAY,MAAA,CAAA,+IAAA;;;MAWO,MAAS,WAAA;;;;;MAGT,MAAO,SAAA;iDACb,MAAO,OAAA,SAAA;AAAA;;;;OAGA,MAAO,SAAA;6EAA8C,MAAQ,QAAA,oBAAA;AAAA;;;OAC7D,MAAO,SAAA;iFAGV,MAAQ,QAAA,oBAAA;AAAA;iJAI4B,MAAI,IAAA,0BAAA;AAAA;;;;;;;;;;"}